{"version":3,"file":"encoder.worker.c10d37b1f9ba44afbbe1.worker.js","mappings":"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","sources":["pages/GIF-Explorer/gif/config.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","pages/GIF-Explorer/gif/Trie.ts","pages/GIF-Explorer/gif/GIFByte.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/GIF-Explorer/gif/Octree.ts","pages/GIF-Explorer/gif/bulidColor.ts","pages/GIF-Explorer/gif/encoder.worker.ts"],"sourcesContent":["export const GIF_MAGIC_NUMBER = [0x47, 0x49, 0x46, 0x38, 0x39, 0x61];\n\nexport const APPLICATION_EXTENSION = [0x21, 0xff];\n\nexport const PLAIN_TEXT_EXTENSION = [0x21, 0x01];\n\nexport const COMMENT_EXTENSION = [0x21, 0xfe];\n\nexport const GRAPHIC_CONTROL_EXTENSION = [0x21, 0xf9];\n\nexport const IMAGE_DESCRIPTOR = [0x2c];\n\nexport const APPLICATION_IDENTIFY = 'NETSCAPE2.0';\n\nexport const END_GIF = [0x3b];\n\nexport const MAX_LENGTH = 4096;\n\nexport const MAX_CODE_SIZE = 12;\n\nexport const INTERCEPT_BIT = [\n  0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0x01ff, 0x03ff, 0x07ff,\n  0x0fff\n];\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","class TrieNode {\n  children: TrieNode[];\n  isEndOfWord: boolean;\n  code!: number;\n\n  constructor() {\n    this.children = new Array(4096);\n    this.isEndOfWord = false;\n  }\n}\n\nclass Trie {\n  root = new TrieNode();\n  count = 0;\n\n  insert(nums: number[]) {\n    let node = this.root;\n\n    for (let i = 0; i < nums.length; i++) {\n      const index = nums[i];\n\n      if (!node.children[index]) {\n        node.children[index] = new TrieNode();\n      }\n\n      node = node.children[index];\n    }\n\n    node.isEndOfWord = true;\n    node.code = this.count;\n\n    this.count++;\n  }\n\n  search(nums: number[]) {\n    let node = this.root;\n    for (let i = 0; i < nums.length; i++) {\n      const index = nums[i];\n\n      if (!node.children[index]) {\n        return false;\n      }\n\n      node = node.children[index];\n    }\n\n    return node;\n  }\n\n  clear() {\n    this.root = new TrieNode();\n    this.count = 0;\n  }\n}\n\nexport default Trie;\n","import {\n  GIF_MAGIC_NUMBER,\n  APPLICATION_EXTENSION,\n  GRAPHIC_CONTROL_EXTENSION,\n  PLAIN_TEXT_EXTENSION,\n  COMMENT_EXTENSION,\n  IMAGE_DESCRIPTOR,\n  APPLICATION_IDENTIFY,\n  END_GIF,\n  MAX_LENGTH\n} from './config';\n\nclass GIFByte {\n  pages: Uint8Array[];\n  cursor = 0;\n\n  constructor() {\n    this.pages = [];\n    this.newPage();\n  }\n\n  newPage() {\n    this.pages[this.pages.length] = new Uint8Array(MAX_LENGTH);\n    this.cursor = 0;\n  }\n\n  writeByte(byte: number) {\n    this.pages[this.pages.length - 1][this.cursor++] = byte;\n\n    if (this.cursor === MAX_LENGTH) this.newPage();\n  }\n\n  writeBytes(bytes: ArrayLike<number>) {\n    for (let i = 0; i < bytes.length; i++) {\n      this.writeByte(bytes[i]);\n    }\n  }\n\n  writeShort(short: number) {\n    const bytes = [short & 0xff, (short >> 8) & 0xff];\n\n    this.writeBytes(bytes);\n  }\n\n  writeGifMagic() {\n    this.writeBytes(GIF_MAGIC_NUMBER);\n  }\n\n  writeLogicalScreenDescriptor(\n    width: number,\n    height: number,\n    info: number,\n    backgroundIndex = 0,\n    pixelAspectRatio = 0\n  ) {\n    this.writeShort(width);\n    this.writeShort(height);\n    this.writeBytes([info, backgroundIndex, pixelAspectRatio]);\n  }\n\n  writeApplicationExtension(Cycles = 0) {\n    this.writeBytes(APPLICATION_EXTENSION);\n    this.writeByte(0x0b);\n    this.writeBytes(Array.from(new TextEncoder().encode(APPLICATION_IDENTIFY)));\n    this.writeByte(0x03);\n    this.writeByte(0x01);\n\n    this.writeShort(Cycles);\n\n    this.writeByte(0);\n  }\n\n  writeGraphicControlExtension(info = 0, delay = 40, transparent = 0) {\n    this.writeBytes(GRAPHIC_CONTROL_EXTENSION);\n    this.writeByte(0x04);\n\n    this.writeByte(info);\n    this.writeShort(delay);\n    this.writeByte(transparent);\n\n    this.writeByte(0);\n  }\n\n  writePlainTextExtension() {\n    this.writeBytes(PLAIN_TEXT_EXTENSION);\n  }\n\n  writeCommentExtension() {\n    this.writeBytes(COMMENT_EXTENSION);\n  }\n\n  writeImageDescriptor(\n    width: number,\n    height: number,\n    info = 0,\n    offsetLeft = 0,\n    offsetTop = 0\n  ) {\n    this.writeBytes(IMAGE_DESCRIPTOR);\n\n    this.writeShort(offsetLeft);\n    this.writeShort(offsetTop);\n\n    this.writeShort(width);\n    this.writeShort(height);\n\n    this.writeByte(info);\n  }\n\n  export() {\n    let size = 0;\n\n    const len = this.pages.length;\n    const cursor = this.cursor;\n\n    if (cursor === 0) {\n      size = len * MAX_LENGTH;\n    } else {\n      size = len > 0 ? (len - 1) * MAX_LENGTH + cursor : 0;\n    }\n\n    const uint8 = new Uint8Array(size);\n\n    for (let i = 0; i < len; i++) {\n      const curr = this.pages[i];\n\n      const last = len - 1;\n      if (cursor && i === last) {\n        const slice = curr.slice(0, cursor);\n\n        uint8.set(slice, i * MAX_LENGTH);\n\n        break;\n      }\n\n      uint8.set(curr, i * MAX_LENGTH);\n    }\n\n    return uint8;\n  }\n\n  end() {\n    this.writeBytes(END_GIF);\n\n    return this.export();\n  }\n}\n\nexport default GIFByte;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import type { ColorObject } from '../types';\n\nclass OctreeNode {\n  children: OctreeNode[] = [];\n  color: ColorObject | null;\n  pixelCount = 0;\n\n  constructor() {\n    this.color = null;\n  }\n}\n\nclass Octree {\n  private maxDepth = 8;\n  private count = 1;\n\n  root: OctreeNode;\n\n  constructor(maxDepth = 8) {\n    if (maxDepth > 8) {\n      throw new Error('the maximum depth cannot exceed 8');\n    }\n\n    this.maxDepth = maxDepth;\n    this.root = new OctreeNode();\n  }\n\n  insertColor(color: ColorObject) {\n    let node = this.root;\n\n    node.pixelCount++;\n\n    for (let depth = this.maxDepth - 1; depth >= 0; depth--) {\n      const index = this.getColorIndex(color, depth);\n\n      if (!node.children[index]) {\n        node.children[index] = new OctreeNode();\n      }\n\n      node = node.children[index];\n\n      node.pixelCount++;\n    }\n\n    if (node.color === null) {\n      this.count++;\n\n      return (node.color = color);\n    }\n\n    const rgb = ['r', 'g', 'b'] as const;\n\n    for (let i = 0; i < rgb.length; i++) {\n      node.color[rgb[i]] += color[rgb[i]];\n    }\n  }\n\n  getColorIndex(color: ColorObject, depth: number) {\n    let index = 0;\n    const mask = 1 << depth;\n\n    if (color.r & mask) {\n      index |= 1;\n    }\n\n    if (color.g & mask) {\n      index |= 2;\n    }\n\n    if (color.b & mask) {\n      index |= 4;\n    }\n\n    return index;\n  }\n\n  shrink(maxCount: number) {\n    if (this.count <= maxCount) return [];\n\n    for (let depth = this.maxDepth - 1; depth >= 0; depth--) {\n      this.reduceColor(this.root, depth, 0, maxCount);\n\n      if (this.count <= maxCount) break;\n    }\n\n    return this.collectColor();\n  }\n\n  reduceColor(\n    node: OctreeNode,\n    depth: number,\n    currDepth: number,\n    maxCount: number\n  ) {\n    if (this.count <= maxCount) return;\n\n    const children = [...node.children];\n\n    if (depth === currDepth) {\n      this._reduceColor(node, maxCount);\n    } else if (depth > currDepth) {\n      for (let i = 0; i < children.length; i++) {\n        if (children[i] === null || children[i] === undefined) continue;\n\n        this.reduceColor(children[i], depth, currDepth + 1, maxCount);\n      }\n    }\n  }\n\n  _reduceColor(node: OctreeNode, maxCount: number) {\n    let isClear = true;\n\n    const children = [...node.children];\n\n    children.sort((a, b) => a.pixelCount - b.pixelCount);\n\n    for (let i = 0; i < children.length; i++) {\n      if (children[i] === null || children[i] === undefined) continue;\n\n      const color = children[i].color;\n\n      if (color === null) continue;\n\n      if (node.color === null) {\n        node.color = color;\n\n        continue;\n      }\n\n      const rgb = ['r', 'g', 'b'] as const;\n\n      for (let j = 0; j < rgb.length; j++) {\n        node.color[rgb[j]] += color[rgb[j]];\n      }\n\n      this.count--;\n\n      if (this.count <= maxCount) {\n        isClear = false;\n\n        for (let j = 0; j < i; j++) {\n          const index = node.children.indexOf(children[j]);\n\n          node.children.splice(index, 1, null as unknown as OctreeNode);\n        }\n\n        break;\n      }\n    }\n    if (isClear) node.children = [];\n  }\n\n  quantizeColor(color: ColorObject) {\n    let node = this.root;\n\n    for (let depth = this.maxDepth - 1; depth >= 0; depth--) {\n      const index = this.getColorIndex(color, depth);\n      if (!node.children[index]) {\n        break;\n      }\n      node = node.children[index];\n    }\n\n    return node.color;\n  }\n\n  collectColor(node = this.root) {\n    if (node === null || node === undefined) return [];\n\n    const colors: ColorObject[] = [];\n    const children = node.children;\n\n    for (let i = 0; i < children.length; i++) {\n      if (children[i] === null || children[i] === undefined) continue;\n\n      const { color } = children[i];\n      if (color) {\n        if (!color.normalize) {\n          const { r, g, b } = color;\n\n          color.r = Math.round(r / children[i].pixelCount) || 0;\n          color.g = Math.round(g / children[i].pixelCount) || 0;\n          color.b = Math.round(b / children[i].pixelCount) || 0;\n          color.normalize = true;\n        }\n\n        colors.push(color);\n      }\n\n      colors.push(...this.collectColor(children[i]));\n    }\n\n    return colors;\n  }\n\n  calcColorDistance(color_1: ColorObject, color_2: ColorObject) {\n    const d = Math.sqrt(\n      (color_1.r - color_2.r) ** 2 +\n        (color_1.g - color_2.g) ** 2 +\n        (color_1.b - color_2.b) ** 2\n    );\n\n    return Math.floor(\n      (1 - d / Math.sqrt(255 ** 2 + 255 ** 2 + 255 ** 2)) * 100\n    );\n  }\n}\n\nexport default Octree;\n","import Octree from './Octree';\n\nfunction bulidColor(pixels: Uint8ClampedArray) {\n  const octree = new Octree();\n\n  // 八叉树颜色量化\n  for (let i = 0; i < pixels.length; i += 4) {\n    octree.insertColor({ r: pixels[i], g: pixels[i + 1], b: pixels[i + 2] });\n  }\n\n  // 减色至 256 色\n  octree.shrink(256);\n\n  // 获取颜色列表\n  const colorList = octree.collectColor();\n\n  return { colorList, octree };\n}\n\nexport default bulidColor;\n","import { MAX_CODE_SIZE } from './config';\nimport Trie from './Trie';\nimport GIFByte from './GIFByte';\nimport bulidColor from './bulidColor';\nimport type { ImageOptions, ColorObject } from '../types';\n\nconst _self = self as unknown as Worker;\nfunction encoder(e: MessageEvent<ImageOptions>) {\n  const { data } = e;\n\n  const {\n    data: { data: pixels },\n    options\n  } = data;\n\n  const {\n    offsetLeft = 0,\n    offsetTop = 0,\n    width = 0,\n    height = 0,\n    disposalMethod = 4,\n    userInput = 0,\n    transparency = 0,\n    delay = 40,\n    transparencyIndex = 0\n  } = options;\n\n  const map = new Map<ColorObject, number>();\n  const input: number[] = [];\n\n  // const octree = new Octree();\n  // console.log('start', self.performance.now());\n  // 八叉树颜色量化\n  // for (let i = 0; i < pixels.length; i += 4) {\n  //   octree.insertColor({ r: pixels[i], g: pixels[i + 1], b: pixels[i + 2] });\n  // }\n  // 减色至 256 色\n  // octree.shrink(256);\n\n  // 获取颜色列表\n  const { colorList, octree } = bulidColor(pixels);\n\n  // 颜色转换为调色盘中颜色的索引\n  for (let i = 0; i < pixels.length; i += 4) {\n    const color = octree.quantizeColor({\n      r: pixels[i],\n      g: pixels[i + 1],\n      b: pixels[i + 2]\n    });\n\n    if (color) {\n      if (map.has(color)) {\n        input.push(map.get(color) || 0);\n      } else {\n        const index = colorList.indexOf(color);\n        map.set(color, index);\n        input.push(index);\n\n        if (index < 0 || index > 255) {\n          throw Error(\n            'the color disk compilation fails, exceeding the expected value'\n          );\n        }\n      }\n    } else {\n      throw Error(\n        'the color disk compilation fails, and there is a problem with the quantification of the color'\n      );\n    }\n  }\n\n  if (input.length !== width * height) {\n    throw Error('index length error');\n  }\n\n  // 本地颜色表\n  const localColorTable = colorList.map(({ r, g, b }) => [r, g, b]);\n\n  // 初始化最小代码大小\n  let lzwMiniCodeSize = 2;\n  while (localColorTable.length > 1 << lzwMiniCodeSize) lzwMiniCodeSize++;\n\n  // 填充色盘, 防止色盘大小错误\n  for (\n    let i = 0, len = localColorTable.length;\n    i < (1 << lzwMiniCodeSize) - len;\n    i++\n  ) {\n    localColorTable.push([0, 0, 0]);\n  }\n\n  // 初始化清除码、结束码、码表\n  const clearCode = 1 << lzwMiniCodeSize;\n  const eoiCode = clearCode + 1;\n\n  // 初始化查找表、字节输出\n  const trie = new Trie();\n  const out = new GIFByte();\n\n  // 输出图形控制器\n  out.writeGraphicControlExtension(\n    disposalMethod | userInput | transparency,\n    delay / 10,\n    transparencyIndex\n  );\n  // 输出图像描述符\n  out.writeImageDescriptor(\n    width,\n    height,\n    0x80 | (lzwMiniCodeSize - 1),\n    offsetLeft,\n    offsetTop\n  );\n  // 输出本地颜色表\n  out.writeBytes(localColorTable.flat());\n  // 输出最小代码大小\n  out.writeByte(lzwMiniCodeSize);\n\n  // 初始化可变代码大小、前缀、当前输入 k\n  let codeSize = lzwMiniCodeSize + 1;\n  let prefix: number[] = [];\n  let k: number[] = [];\n\n  // 初始化输入长度、当前索引 point\n  const len = input.length;\n  let point = 0;\n\n  // 剩余位\n  let bit = 0;\n  // 偏移位\n  let offset = 0;\n\n  // 字节\n  const bytes: number[] = [];\n\n  const set = (code: number) => {\n    code <<= offset;\n    code |= bit;\n\n    offset += codeSize;\n\n    while (offset >= 8) {\n      bytes[bytes.length] = code & 0xff;\n\n      if (bytes.length === 0xff) {\n        out.writeByte(0xff);\n        out.writeBytes(bytes);\n\n        bytes.length = 0;\n      }\n\n      code >>>= 8;\n      offset -= 8;\n    }\n\n    bit = code;\n  };\n\n  // 首先输出清除码\n  set(clearCode);\n\n  // 取第一个输入作为初始化的当前前缀\n  prefix = [input[point++]];\n\n  // 初始化查找表\n  for (let i = 0; i <= eoiCode; i++) trie.insert([i]);\n\n  // 主循环体\n  while (point < len) {\n    // 获取下一个输入作为 k\n    k = [input[point++]];\n\n    // 查找表中查找 前缀 + k\n    const current = prefix.concat(k);\n    const result = trie.search(current);\n\n    // 找到则 前缀 = 前缀 + k\n    if (result) {\n      prefix = current;\n      k = [];\n\n      continue;\n    }\n\n    // 未找到在查找表中插入\n    trie.insert(current);\n\n    // 获取前缀对应的码\n    const prefixCode = trie.search(prefix);\n\n    // 添加至码表\n    prefixCode && set(prefixCode.code);\n\n    // 前缀 = k\n    prefix = k;\n    // k 重置\n    k = [];\n\n    // 获取刚刚添加的码\n    const preCode = trie.count - 1;\n\n    // 如果码大于 codeSize 所能表示的数字且 codeSize 小于 12, codeSize + 1\n    if (preCode > (1 << codeSize) - 1 && codeSize < MAX_CODE_SIZE) {\n      codeSize++;\n    } else if (preCode === 1 << MAX_CODE_SIZE) {\n      // 如果码等于最大代码所能表示的值, 重新初始化查找表\n      trie.clear();\n      for (let i = 0; i <= eoiCode; i++) trie.insert([i]);\n\n      // 输出清除码\n      set(clearCode);\n\n      // 重置 codeSize\n      codeSize = lzwMiniCodeSize + 1;\n    }\n  }\n\n  // 已完成输出最后的码\n  const val = trie.search(prefix);\n  val && set(val.code);\n\n  // 输出信息结束码\n  set(eoiCode);\n\n  // 如果还有剩余的位, 添加至字节列表\n  if (offset !== 0) {\n    bytes[bytes.length] = bit;\n  }\n\n  // 如果字节还有数据, 输出至字节数组\n  if (bytes.length) {\n    out.writeByte(bytes.length);\n    out.writeBytes(bytes);\n  }\n\n  // 块结束\n  out.writeByte(0x00);\n\n  const image = out.export();\n\n  _self.postMessage({ index: options.index, data: image });\n\n  // console.log('end', self.performance.now());\n}\n\n_self.addEventListener('message', encoder);\n"],"names":["GIF_MAGIC_NUMBER","APPLICATION_EXTENSION","PLAIN_TEXT_EXTENSION","COMMENT_EXTENSION","GRAPHIC_CONTROL_EXTENSION","IMAGE_DESCRIPTOR","END_GIF","MAX_LENGTH","_typeof","obj","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","TrieNode","children","isEndOfWord","code","this","Array","Trie","root","count","value","nums","node","index","GIFByte","pages","cursor","newPage","Uint8Array","byte","bytes","writeByte","short","writeBytes","width","height","info","backgroundIndex","arguments","pixelAspectRatio","writeShort","Cycles","from","TextEncoder","encode","delay","transparent","offsetLeft","offsetTop","size","len","uint8","curr","slice","set","export","_arrayLikeToArray","arr","arr2","_toConsumableArray","isArray","iter","o","minLen","n","toString","name","test","OctreeNode","color","pixelCount","Octree","maxDepth","Error","depth","getColorIndex","rgb","mask","r","g","b","maxCount","reduceColor","collectColor","currDepth","_reduceColor","isClear","sort","a","j","indexOf","splice","colors","normalize","Math","round","push","apply","color_1","color_2","d","sqrt","pow","floor","pixels","octree","insertColor","shrink","colorList","_self","self","addEventListener","e","data","options","_options$offsetLeft","_options$offsetTop","_options$width","_options$height","_options$disposalMeth","disposalMethod","_options$userInput","userInput","_options$transparency","transparency","_options$delay","_options$transparency2","transparencyIndex","map","Map","_bulidColor","bulidColor","quantizeColor","has","get","localColorTable","_ref","lzwMiniCodeSize","clearCode","eoiCode","trie","out","writeGraphicControlExtension","writeImageDescriptor","flat","codeSize","prefix","k","point","bit","offset","insert","current","concat","search","prefixCode","preCode","clear","val","image","postMessage"],"sourceRoot":""}