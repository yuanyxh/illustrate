{"version":3,"file":"decoder.worker.fe14293945b50ac9f350.worker.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","utils/index.ts","pages/GIF-Explorer/gif/config.ts","pages/GIF-Explorer/gif/decoder.worker.ts"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * @description Array.isArray alias\n */\nexport const isArray = (any: unknown): any is unknown[] => Array.isArray(any);\n\n/**\n *\n * @description Math.max alias\n */\nexport const max = (...values: number[]) => Math.max(...values);\n\n/**\n *\n * @description Math.min alias\n */\nexport const min = (...values: number[]) => Math.max(...values);\n\n/**\n * @description data is string\n */\nexport const isString = function (data: unknown): data is string {\n  return Object.prototype.toString.call(data) === '[object String]';\n};\n\n/**\n * @description data is number\n */\nexport const isNumber = function (data: unknown): data is number {\n  return (\n    Object.prototype.toString.call(data) === '[object Number]' &&\n    !Number.isNaN(data)\n  );\n};\n\n/**\n * @description data is symbol\n */\nexport const isSymbol = function (data: unknown): data is symbol {\n  return Object.prototype.toString.call(data) === '[object Symbol]';\n};\n\n/**\n * @description data is boolean\n */\nexport const isBoolean = function (data: unknown): data is boolean {\n  return Object.prototype.toString.call(data) === '[object Boolean]';\n};\n\n/**\n * @description data is undefined\n */\nexport const isUndef = function (data: unknown): data is undefined {\n  return data === undefined;\n};\n\n/**\n * @description data is null\n */\nexport const isNull = function (data: unknown): data is null {\n  return data === null;\n};\n\n/**\n * @description data is function\n */\nexport const isFun = function <T extends (...any: unknown[]) => unknown>(\n  data: unknown\n): data is T {\n  return typeof data === 'function';\n};\n\n/**\n * @description data is not undefined and null\n */\nexport const hasData = (data: unknown) => data !== null || data !== undefined;\n\nexport function isEmpty(data: unknown): data is undefined | null {\n  return data === null || data === undefined;\n}\n\n/**\n * @description data is basic type\n */\nexport const isBasicType = (data: unknown) =>\n  isUndef(data) ||\n  isNull(data) ||\n  isString(data) ||\n  isNumber(data) ||\n  isBoolean(data) ||\n  isSymbol(data);\n\nexport function forEach(\n  target: string,\n  cb: (value: string, index: number, self: string) => unknown\n): void;\nexport function forEach<T>(\n  target: T[],\n  cb: (value: T, index: number, self: T[]) => unknown\n): void;\nexport function forEach(\n  target: FileList,\n  cb: (value: File, index: number, self: FileList) => unknown\n): void;\nexport function forEach(\n  target: DataTransferItemList,\n  cb: (\n    value: DataTransferItem,\n    index: number,\n    self: DataTransferItemList\n  ) => unknown\n): void;\nexport function forEach<T extends object>(\n  target: T,\n  cb: (value: T[keyof T], key: string, self: T) => unknown\n): void;\n/**\n * @description 迭代器\n */\nexport function forEach<T extends (...anys: unknown[]) => unknown>(\n  target: unknown,\n  cb: T\n) {\n  if (\n    isArray(target) ||\n    isString(target) ||\n    target instanceof FileList ||\n    target instanceof DataTransferItemList\n  ) {\n    const len = target.length;\n    let i = 0;\n\n    for (; i < len; i++) {\n      if (cb(target[i], i, target) === false) break;\n    }\n  } else if (target && typeof target === 'object') {\n    const keys = Object.keys(target);\n    const len = keys.length;\n    let i = 0;\n\n    for (; i < len; i++) {\n      if (cb(target[keys[i] as keyof typeof target], keys[i], target) === false)\n        break;\n    }\n  }\n}\n\n/** @description 字符检查工具 */\nexport const checkCharacter = (reg: RegExp) => (s: string) => reg.test(s);\n\n/**\n * @description 判断是否可以渲染，同时返回一个无意义字符串通过 react 的检查\n */\nexport const isRenderElement = (condition: unknown) =>\n  condition ? 'render' : undefined;\n\nexport const assign = <T>(\n  obj: OrdinaryObject,\n  ...args: OrdinaryObject[]\n): T => {\n  for (let i = 0; i < args.length; i++) {\n    const curr = args[i];\n    const _names = Object.getOwnPropertyNames(args[i]);\n    const _symbols = Object.getOwnPropertySymbols(args[i]);\n\n    for (let j = 0; j < _names.length; j++) {\n      if (\n        typeof curr[_names[j]] === 'undefined' &&\n        typeof obj[_names[j]] !== 'undefined'\n      ) {\n        continue;\n      }\n\n      obj[_names[j]] = curr[_names[j]];\n    }\n\n    for (let j = 0; j < _symbols.length; j++) {\n      if (\n        typeof curr[_symbols[j]] === 'undefined' &&\n        typeof obj[_symbols[j]] !== 'undefined'\n      ) {\n        continue;\n      }\n\n      obj[_symbols[j]] = curr[_symbols[j]];\n    }\n  }\n\n  return obj as T;\n};\n\n/**\n *\n * @param width canvas 宽\n * @param height canvas 高\n * @returns canvas 及对应上下文\n */\nexport const createCanvasContext: CreateCanvasContext = (options) => {\n  const _canvas = window.document.createElement('canvas');\n  const context = _canvas.getContext('2d', {\n    willReadFrequently: options?.willReadFrequently\n  });\n\n  if (options?.width) {\n    _canvas.width = options.width;\n  }\n  if (options?.height) {\n    _canvas.height = options.height;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return { canvas: _canvas, context: context! };\n};\n\nexport * from './http';\n\nexport * from './classnames';\n\nexport * from './elements';\n\nexport * from './events';\n\nexport * from './polling';\n\nexport { default as base64 } from './crypto/base64';\n","export const GIF_MAGIC_NUMBER = [0x47, 0x49, 0x46, 0x38, 0x39, 0x61];\n\nexport const APPLICATION_EXTENSION = [0x21, 0xff];\n\nexport const PLAIN_TEXT_EXTENSION = [0x21, 0x01];\n\nexport const COMMENT_EXTENSION = [0x21, 0xfe];\n\nexport const GRAPHIC_CONTROL_EXTENSION = [0x21, 0xf9];\n\nexport const IMAGE_DESCRIPTOR = [0x2c];\n\nexport const APPLICATION_IDENTIFY = 'NETSCAPE2.0';\n\nexport const END_GIF = [0x3b];\n\nexport const MAX_LENGTH = 4096;\n\nexport const MAX_CODE_SIZE = 12;\n\nexport const INTERCEPT_BIT = [\n  0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0x01ff, 0x03ff, 0x07ff,\n  0x0fff\n];\n","import { isEmpty } from '@/utils';\nimport { INTERCEPT_BIT, MAX_CODE_SIZE } from './config';\nimport type { GIFPattern } from '../types';\n\ntype Frames = GIFPattern['frames'][number];\n\ntype Message = Frames & { globalColor: boolean; globalColorTable?: number[][] };\n\nconst _self = self as unknown as Worker;\n\n_self.addEventListener('message', ({ data }: MessageEvent<Message>) => {\n  // 获取必要数据\n  const {\n    width,\n    height,\n    globalColor,\n    globalColorTable,\n    statistics: { localColor },\n    localColorTable,\n    lzwMiniCodeSize,\n    blocks,\n    control\n  } = data;\n\n  const { transparency = false, transparencyIndex = 0 } = control || {};\n\n  if ((globalColor || localColor) === false) {\n    throw Error(\n      \"can't find the corresponding color disk, please confirm whether there are valid data\"\n    );\n  }\n\n  function getByte() {\n    if (cursor === block?.length) {\n      block = blocks.shift();\n      cursor = 0;\n    }\n\n    return block?.[cursor++];\n  }\n\n  function getCode() {\n    while (offset < codeSize) {\n      const byte = getByte();\n\n      if (byte === undefined) {\n        const result = bit & INTERCEPT_BIT[codeSize];\n\n        bit >>>= codeSize;\n        offset = 0;\n\n        return result;\n      }\n\n      bit = (byte << offset) | bit;\n      offset += 8;\n    }\n\n    const result = bit & INTERCEPT_BIT[codeSize];\n\n    bit >>>= codeSize;\n    offset -= codeSize;\n\n    return result;\n  }\n\n  const clearCode = 1 << lzwMiniCodeSize;\n  const eoiCode = clearCode + 1;\n  const trie = new Map<number, number[]>();\n  const indexStream: number[] = [];\n\n  let codeSize = lzwMiniCodeSize + 1;\n\n  let code = -1;\n  let $code: number[] = [];\n  let prevCode = -1;\n  let perfix: number[] = [];\n  let k = -1;\n  let block = blocks.shift();\n  let offset = 0;\n  let bit = 0;\n  let cursor = 0;\n\n  let isFinish = false;\n\n  code = getCode();\n  if (code !== clearCode) {\n    throw new Error(\n      'invalid data, the first code in the code stream should be Clear Code'\n    );\n  }\n\n  for (let i = 0; i <= eoiCode; i++) trie.set(i, [i]);\n\n  code = getCode();\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  $code = trie.get(code)!;\n  indexStream.push(...$code);\n  prevCode = code;\n\n  while (block) {\n    if (trie.size - 1 === (1 << codeSize) - 1 && codeSize < MAX_CODE_SIZE) {\n      codeSize++;\n    }\n\n    code = getCode();\n\n    switch (true) {\n      case code === clearCode:\n        trie.clear();\n        for (let i = 0; i <= eoiCode; i++) trie.set(i, [i]);\n        codeSize = lzwMiniCodeSize + 1;\n\n        code = getCode();\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        $code = trie.get(code)!;\n        indexStream.push(...$code);\n        prevCode = code;\n        break;\n\n      case code === eoiCode:\n        isFinish = true;\n        break;\n\n      default:\n        if (trie.has(code)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          $code = trie.get(code)!;\n          indexStream.push(...$code);\n\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          perfix = trie.get(prevCode)!;\n          k = $code[0];\n\n          perfix = perfix.concat(k);\n\n          trie.set(trie.size, perfix);\n          prevCode = code;\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          perfix = trie.get(prevCode)!;\n          k = perfix[0];\n          perfix = perfix.concat(k);\n          indexStream.push(...perfix);\n          trie.set(trie.size, perfix);\n          prevCode = code;\n        }\n\n        break;\n    }\n\n    if (isFinish) break;\n  }\n\n  let table: number[][] = [];\n  if (localColor && localColorTable) {\n    table = localColorTable;\n  } else if (globalColor && globalColorTable) {\n    table = globalColorTable;\n  }\n\n  const transparent = transparency ? 0x00 : 0xff;\n  const imageData = new ImageData(width, height);\n\n  for (let i = 0; i < indexStream.length; i++) {\n    const index = indexStream[i];\n    const color = table[index];\n\n    if (isEmpty(color)) {\n      throw new Error(\n        `can't find the corresponding color, please confirm that the color disc index ${index} exists`\n      );\n    }\n\n    const j = i * 4;\n\n    imageData.data[j] = color[0];\n    imageData.data[j + 1] = color[1];\n    imageData.data[j + 2] = color[2];\n    imageData.data[j + 3] =\n      index === transparencyIndex ? 0xff & transparent : 0xff;\n  }\n\n  const { globalColor: _, globalColorTable: __, ...result } = data;\n\n  _;\n  __;\n\n  result.data = imageData;\n\n  _self.postMessage(result);\n});\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_arrayLikeToArray","arr","len","arr2","Array","isArray","iter","Symbol","iterator","from","o","minLen","n","toString","slice","constructor","name","test","TypeError","isEmpty","data","undefined","INTERCEPT_BIT","_self","self","addEventListener","_ref","width","height","globalColor","globalColorTable","localColor","statistics","localColorTable","lzwMiniCodeSize","blocks","_ref2","control","_ref2$transparency","transparency","_ref2$transparencyInd","transparencyIndex","Error","getByte","_block","_block2","cursor","block","shift","getCode","offset","codeSize","byte","result","bit","clearCode","eoiCode","trie","Map","indexStream","code","$code","prevCode","perfix","k","isFinish","set","get","push","apply","_toConsumableArray","size","clear","has","concat","table","transparent","imageData","ImageData","index","color","j","_excluded","postMessage"],"sourceRoot":""}