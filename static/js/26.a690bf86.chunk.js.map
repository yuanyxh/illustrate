{"version":3,"file":"static/js/26.a690bf86.chunk.js","mappings":"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","sources":["webpack://illustrate/./src/layout/Navbar.module.css?768b","layout/Navbar.tsx","webpack://illustrate/./src/layout/Sidebar.module.css?6587","layout/Sidebar.tsx","webpack://illustrate/./src/layout/Main.module.css?c994","layout/Main.tsx","webpack://illustrate/./src/layout/Layout.module.css?5fe8","layout/Layout.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navbar\":\"Navbar_navbar__RR-7V\",\"left\":\"Navbar_left__XvGnq\",\"logo-container\":\"Navbar_logo-container__KAOMy\",\"logo\":\"Navbar_logo__raDWX\",\"logo-text\":\"Navbar_logo-text__pIOYz\",\"menu\":\"Navbar_menu__Je5-1\",\"right\":\"Navbar_right__5ecqi\",\"list\":\"Navbar_list__1Mkvt\",\"list-item\":\"Navbar_list-item__XVzFo\"};","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { isRenderElement } from '@/utils';\nimport { useAppSelector, useAppDispatch } from '@/store';\nimport { setColorScheme } from '@/store/module/colorScheme';\nimport { ScreenContext } from './Layout';\nimport Text from '@/components/Text/Text';\nimport style from './Navbar.module.css';\n\ninterface NavbarProps {\n  toggle(payload: boolean): void;\n}\n\n/**\n * @description 导航栏\n */\nexport default function Navbar({ toggle }: Readonly<NavbarProps>) {\n  const smallScreen = useContext(ScreenContext);\n  const colorScheme = useAppSelector((state) => state.colorScheme.colorScheme);\n  const dispatch = useAppDispatch();\n\n  const onclick = () => toggle(true);\n\n  const changeLight = () => dispatch(setColorScheme('light'));\n  const changeDark = () => dispatch(setColorScheme('dark'));\n\n  return (\n    <nav className={style.navbar}>\n      <div className={style['left']}>\n        {smallScreen ? (\n          <div className={style.menu} onClick={onclick}>\n            <i className=\"iconfont icon-menu\"></i>\n          </div>\n        ) : (\n          <Link style={{ height: '100%' }} to={'/'}>\n            <h1 className={style['logo-container']} title=\"yuanyxh\">\n              <img\n                className={style['logo']}\n                src=\"/illustrate/logo.png\"\n                alt=\"logo\"\n              />\n\n              <Text className={style['logo-text']} block size=\"large\">\n                yuanyxh\n              </Text>\n            </h1>\n          </Link>\n        )}\n      </div>\n\n      <div className={style['right']}>\n        <ul className={style['list']}>\n          {isRenderElement(colorScheme === 'light') && (\n            <li\n              className={style['list-item']}\n              title=\"light\"\n              onClick={changeDark}\n            >\n              <i\n                className=\"iconfont icon-light\"\n                style={{ color: 'var(--color-primary)' }}\n              ></i>\n            </li>\n          )}\n          {isRenderElement(colorScheme === 'dark') && (\n            <li\n              className={style['list-item']}\n              title=\"dark\"\n              onClick={changeLight}\n            >\n              <i\n                className=\"iconfont icon-dark\"\n                style={{ color: 'var(--color-info-dark-2)' }}\n              ></i>\n            </li>\n          )}\n\n          <li className={style['list-item']} title=\"blog\">\n            <Link to=\"https://yuanyxh.com/\" target=\"_blank\">\n              <i\n                className=\"iconfont icon-blog\"\n                style={{\n                  color: 'var(--color-primary)',\n                  fontSize: 'calc(var(--font-size-extra-large) * 1)'\n                }}\n              ></i>\n            </Link>\n          </li>\n          <li className={style['list-item']} title=\"github\">\n            <Link to=\"https://github.com/yuanyxh/illustrate\" target=\"_blank\">\n              <i\n                className=\"iconfont icon-github-fill\"\n                style={{ color: 'var(--color-info-dark-2)' }}\n              ></i>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"Sidebar_sidebar__hNbrJ\",\"visible-side\":\"Sidebar_visible-side__O2-+e\",\"link\":\"Sidebar_link__-q4Gx\",\"active\":\"Sidebar_active__BsHgg\",\"mask\":\"Sidebar_mask__0UCPB\"};","import React, { useContext, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ScreenContext } from './Layout';\nimport { usePages } from '@/hooks';\nimport { classnames } from '@/utils';\nimport style from './Sidebar.module.css';\n\ninterface SidebarProps extends Props {\n  visibleSide: boolean;\n  toggle(payload: boolean): void;\n}\n\nconst generateClass = classnames(style);\n\n/**\n * @description 网站侧边栏\n */\nexport default function Sidebar({\n  visibleSide,\n  toggle\n}: Readonly<SidebarProps>) {\n  const pages = usePages();\n  const smallScreen = useContext(ScreenContext);\n\n  const active = generateClass(['link', 'active']);\n  const side = generateClass(\n    { 'visible-side': visibleSide, sidebar: true },\n    'scroll-y'\n  );\n\n  useEffect(() => {\n    if (smallScreen) toggle(false);\n  }, [smallScreen]);\n\n  return (\n    <>\n      <aside className={side}>\n        {pages.map((page, i) => (\n          <NavLink\n            key={i}\n            to={`${page.path}`}\n            className={({ isActive }) => (isActive ? active : style.link)}\n            onClick={() => toggle(false)}\n          >\n            <span className=\"doubleline-substring\">{page.title}</span>\n          </NavLink>\n        ))}\n      </aside>\n\n      {smallScreen && (\n        <div\n          className={`mask ${visibleSide ? 'visible' : ''}`}\n          onClick={() => toggle(false)}\n          onScroll={(e) => e.stopPropagation()}\n        />\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Main_main__6Seoj\"};","import React, { Suspense, memo } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Loading from '@/components/Loading/Loading';\nimport style from './Main.module.css';\n\n/**\n * @description 网站主体内容\n */\nexport default memo(function Main() {\n  return (\n    <main className={style.main}>\n      <Suspense fallback={<Loading style={{ height: '100vh' }} delay={150} />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"layout\":\"Layout_layout__bMgkl\"};","import React, {\n  createContext,\n  useEffect,\n  useState,\n  useMemo,\n  useCallback\n} from 'react';\nimport { ScrollRestoration, useLocation, useMatch } from 'react-router-dom';\nimport CONFIG from '@/config';\nimport { routes } from '@/router';\nimport { useScreen, useColorScheme } from '@/hooks';\nimport { isEmpty } from '@/utils';\nimport Navbar from './Navbar';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\nimport style from './Layout.module.css';\n\nexport const ScreenContext = createContext(false);\n\nconst map = new Map<string, string>();\n\n/**\n * @description 网站整体布局\n */\nexport default function Layout() {\n  const [visibleSide, setVisibleSide] = useState(false);\n  const isSmallScreen = useScreen();\n  const location = useLocation();\n  const match = useMatch(location.pathname);\n\n  const toggle = useCallback(\n    (payload: boolean) => setVisibleSide(() => payload),\n    []\n  );\n\n  useMemo(() => {\n    if (isSmallScreen) {\n      window.document.documentElement.setAttribute('screen', 'small');\n    } else {\n      window.document.documentElement.removeAttribute('screen');\n    }\n  }, [isSmallScreen]);\n\n  useEffect(() => {\n    if (isEmpty(match)) {\n      window.document.title = CONFIG.PROJECT_NAME;\n    } else {\n      if (map.has(match.pattern.path)) {\n        window.document.title =\n          map.get(match.pattern.path) || CONFIG.PROJECT_NAME;\n      } else {\n        const paths = match.pattern.path\n          .split('/')\n          .filter((path) => path.trim() !== '');\n\n        const title = resolve(findRoute(paths, routes.slice(0)));\n        window.document.title = title;\n\n        map.set(match.pattern.path, title);\n      }\n    }\n\n    return () => {\n      window.document.title = CONFIG.PROJECT_NAME;\n    };\n  }, [match]);\n\n  useColorScheme();\n\n  const resolve = (title: string) => {\n    if (title.trim() !== '') {\n      return `${title} | ${CONFIG.PROJECT_NAME}`;\n    }\n\n    return CONFIG.PROJECT_NAME;\n  };\n\n  const findRoute = (\n    paths: string[],\n    target: Route.CustomRouteObject[] | undefined\n  ): string => {\n    const path = paths.shift();\n\n    if (isEmpty(target) || isEmpty(path)) return '';\n\n    for (let i = 0; i < target.length; i++) {\n      const fined = target[i].path === path || target[i].path === `/${path}`;\n\n      if (fined) {\n        if (paths.length === 0) {\n          return target[i].title || '';\n        } else {\n          target = target[i].children;\n          return findRoute(paths, target);\n        }\n      }\n    }\n\n    for (let i = 0; i < target.length; i++) {\n      const children = target[i].children;\n      const result = findRoute([path], children);\n\n      if (result !== '') {\n        return result;\n      }\n    }\n\n    return '';\n  };\n\n  return (\n    <ScreenContext.Provider value={isSmallScreen}>\n      <div className={style.layout}>\n        <Navbar toggle={toggle} />\n        <Sidebar visibleSide={visibleSide} toggle={toggle} />\n        <Main />\n      </div>\n\n      <ScrollRestoration getKey={(location) => location.pathname} />\n    </ScreenContext.Provider>\n  );\n}\n"],"names":["Navbar","_ref","toggle","smallScreen","useContext","ScreenContext","colorScheme","useAppSelector","state","dispatch","useAppDispatch","_jsxs","className","style","children","_jsx","onClick","Link","height","to","title","src","alt","Text","block","size","isRenderElement","setColorScheme","color","target","fontSize","generateClass","classnames","Sidebar","visibleSide","pages","usePages","active","side","sidebar","useEffect","_Fragment","map","page","i","NavLink","concat","path","_ref2","isActive","onScroll","e","stopPropagation","memo","Suspense","fallback","Loading","delay","Outlet","createContext","Map","Layout","_useState","useState","_useState2","_slicedToArray","setVisibleSide","isSmallScreen","useScreen","location","useLocation","match","useMatch","pathname","useCallback","payload","useMemo","window","document","documentElement","setAttribute","removeAttribute","isEmpty","CONFIG","has","pattern","get","paths","split","filter","trim","resolve","findRoute","routes","set","useColorScheme","shift","length","result","Provider","value","Main","ScrollRestoration","getKey"],"sourceRoot":""}