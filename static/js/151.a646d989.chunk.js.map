{"version":3,"file":"static/js/151.a646d989.chunk.js","mappings":"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","sources":["webpack://illustrate/./src/components/ExtraInformation/ExtraInformation.module.css?07f8","components/ExtraInformation/ExtraInformation.tsx","webpack://illustrate/./src/components/Tip/Tip.module.css?f034","components/Tip/Tip.tsx","pages/PdfParser/lib/enum.ts","pages/PdfParser/lib/utils.ts","pages/PdfParser/lib/PDFParser.ts","webpack://illustrate/./src/pages/PdfParser/PdfParser.module.css?e180","pages/PdfParser/PdfParser.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"extra-information\":\"ExtraInformation_extra-information__7IIIz\",\"title\":\"ExtraInformation_title__uuJSl\",\"wrapper\":\"ExtraInformation_wrapper__U6DgQ\",\"other\":\"ExtraInformation_other__V71-O\",\"platform\":\"ExtraInformation_platform__qc+Lo\",\"platform-item\":\"ExtraInformation_platform-item__9f9b1\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Platform } from '@/enum';\nimport Tip from '@/components/Tip/Tip';\nimport Text from '@/components/Text/Text';\nimport style from './ExtraInformation.module.css';\n\ninterface ExtraInformationProps {\n  platform: {\n    [key in keyof typeof Platform]?: key extends 'blog'\n      ? { title: string; url: string }\n      : { url: string };\n  };\n}\n\nexport default function ExtraInformation(props: ExtraInformationProps) {\n  const { platform } = props;\n\n  return (\n    <Tip type=\"primary\">\n      {{\n        header() {\n          return <span>案例相关链接：</span>;\n        },\n        body() {\n          return (\n            <div className={style['wrapper']}>\n              <div className={style['foremost']}>\n                <span className={style['platform']}>{Platform['blog']}：</span>\n\n                <Link to={platform['blog']?.url || ''} target=\"_blank\">\n                  <Text type=\"primary\">{platform['blog']?.title}</Text>\n                </Link>\n              </div>\n\n              <div className={style['other']}>\n                <span className={style['platform']}>发布平台：</span>\n\n                <p className={style['platform-item']}>\n                  {Object.keys(platform).map((key) => (\n                    <Link\n                      key={key}\n                      to={platform[key as keyof typeof Platform]?.url || ''}\n                      target=\"_blank\"\n                    >\n                      <Text type=\"primary\">\n                        {Platform[key as keyof typeof Platform]}\n                      </Text>\n                    </Link>\n                  ))}\n                </p>\n              </div>\n            </div>\n          );\n        }\n      }}\n    </Tip>\n\n    // <div className={style['extra-information']}>\n    //   <h1 className={style['title']}>案例相关链接：</h1>\n\n    //   {/* <div className={style['wrapper']}>\n    //     {Object.keys(platform).map((key) => (\n    //       <div key={key} className={style['group']}>\n    //         <span className={style['platform']}>\n    //           {Platform[key as keyof typeof Platform]}：\n    //         </span>\n\n    //         {platform[key as keyof typeof Platform]?.map(({ title, url }) => (\n    //           <Link key={url} to={url} target=\"_blank\">\n    //             <Text type=\"primary\">{title}</Text>\n    //           </Link>\n    //         ))}\n    //       </div>\n    //     ))}\n    //   </div> */}\n    // </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tip\":\"Tip_tip__LNTuj\",\"tip-primary\":\"Tip_tip-primary__EAMUK\",\"tip-success\":\"Tip_tip-success__feMEZ\",\"tip-info\":\"Tip_tip-info__9b9z2\",\"tip-warning\":\"Tip_tip-warning__+9WRn\",\"tip-danger\":\"Tip_tip-danger__KHeBd\",\"tip-title\":\"Tip_tip-title__3+lfq\",\"tip-desc\":\"Tip_tip-desc__FIuUb\",\"tip-close\":\"Tip_tip-close__9UyE6\",\"tip-leave\":\"Tip_tip-leave__2BXBh\",\"leave\":\"Tip_leave__YwMOn\"};","import React, { useState, useRef, useEffect } from 'react';\nimport { useTransition } from '@/hooks';\nimport { classnames, composeClass, isRenderElement } from '@/utils';\nimport style from './Tip.module.css';\n\ninterface TipSlots {\n  header(): React.ReactNode | React.ReactNode[];\n  body(): React.ReactNode | React.ReactNode[];\n}\n\ninterface TipProps extends Props {\n  children: TipSlots;\n  showClose?: boolean;\n  autoClose?: number;\n  type?: 'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger';\n}\n\nconst generateClass = classnames(style);\n\nexport default function Tip(props: TipProps) {\n  const {\n    children,\n    style: _style,\n    autoClose,\n    type = 'default',\n    showClose = false,\n    className = '',\n    ...nativeProps\n  } = props;\n\n  const [show, setShow] = useState(true);\n  const [timer, setTimer] = useState(-1);\n\n  const tipRef = useRef<HTMLDivElement>(null);\n\n  useTransition(show, tipRef, { active: '' }, { active: style['tip-leave'] });\n\n  useEffect(() => {\n    if (typeof autoClose !== 'number') return;\n\n    const timer = window.setTimeout(() => {\n      handleClose();\n    }, autoClose);\n\n    setTimer(timer);\n\n    return () => {\n      window.clearTimeout(timer);\n    };\n  }, []);\n\n  const tipClass = generateClass(['tip', `tip-${type}`]);\n\n  const handleClose = () => {\n    setShow(false);\n\n    if (timer) {\n      window.clearTimeout(timer);\n    }\n  };\n\n  return (\n    <div\n      ref={tipRef}\n      className={composeClass(tipClass, className)}\n      style={_style}\n      {...nativeProps}\n    >\n      <h2 className={style['tip-title']}>{children.header()}</h2>\n\n      <div className={style['tip-desc']}>{children.body()}</div>\n\n      {isRenderElement(showClose) && (\n        <button className={style['tip-close']} onClick={handleClose}>\n          <i className=\"iconfont icon-guanbi\"></i>\n        </button>\n      )}\n    </div>\n  );\n}\n","/** 标志 */\nexport const Flag = {\n  /** pdf */\n  IS_PDF: [0x25, 0x50, 0x44, 0x46],\n  /** startxref */\n  START_XREF: [0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66],\n  /** trailer */\n  TRAILER: [0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72],\n  /** xref */\n  XREF: [0x78, 0x72, 0x65, 0x66],\n  /** 间接引用, 格式为: number number R */\n  QUOTE: [0x52],\n  /** 流开始 */\n  STREAM_START: [0x73, 0x74, 0x72, 0x65, 0x61, 0x6d],\n  /** 流结束 */\n  STREAM_END: [0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d],\n  /** 字体映射开始 */\n  BEGIN_CHAR: [\n    0x62, 0x65, 0x67, 0x69, 0x6e, 0x62, 0x66, 0x63, 0x68, 0x61, 0x72\n  ],\n  /** 字体映射结束 */\n  END_CHAR: [0x65, 0x6e, 0x64, 0x62, 0x66, 0x63, 0x68, 0x61, 0x72]\n};\n\n/** 特征 */\nexport const Feature = {\n  /** 字典开头 */\n  DICTIONARY_START: [0x3c, 0x3c],\n  /** 字典结尾 */\n  DICTIONARY_END: [0x3e, 0x3e],\n  /** 数组开始 */\n  SQUARE_BRACKET_START: [0x5b],\n  /** 数组结束 */\n  SQUARE_BRACKET_END: [0x5d],\n  /** 名称 */\n  INCLINED: [0x2f],\n  /** 字符串开始 */\n  ARROW_START: [0x3c],\n  /** 字符串结束 */\n  ARROW_END: [0x3e],\n  /** 字符串开始 */\n  PARENTHESES_START: [0x28],\n  /** 字符串结束 */\n  PARENTHESES_END: [0x29]\n};\n\n/** 不可见字符 */\nexport const InvisibleChar = {\n  SPACE: [0x20],\n  LINE_FEED: [0x0a],\n  CARRIAGE_RETURN: [0x0d],\n  LINE_BREAK: [0x0d, 0x0a]\n};\n\n/** 线断点风格 */\nexport const LINE_CAPS = ['butt', 'round', 'square'] as const;\n\n/** 线交叉风格 */\nexport const LINE_JOINS = ['miter', 'round', 'bevel'] as const;\n\n/** 图形操作符 */\nexport const Graphic = {\n  // 普通图像状态操作符 =======\n  /** w 操作符, 线宽, 对应 canvas 的 lineWidth */\n  LINE_WIDTH: [0x77],\n  /** J 操作符, 线端点风格, 对应 canvas 的 lineCap */\n  LINE_CAP: [0x4a],\n  /** j 操作符, 线交叉风格, 对应 canvas 的 lineJoin */\n  LINE_JOIN: [0x6a],\n  /** M 操作符, 斜接面限制比例的数字, 对应 canvas 的 miterLimit */\n  MITER_LIMIT: [0x4d],\n\n  // d 操作符, 设置虚线风格\n  // ri 操作符, 设置Rendering Intent(呈色意向)\n  // i 操作符, 设置平面化容忍度\n\n  /** gs 操作符, 设置图形状态, 依赖于 Resources 资源对象 */\n  GS: [0x67, 0x73],\n  // ===========\n\n  // 特殊图形状态操作符 =======\n  /** q 操作符, 存储当前状态, 对应 canvas 的 save() */\n  SAVE: [0x71],\n  /** Q 操作符, 回退状态, 对应 canvas 的 restore() */\n  RESTORE: [0x51],\n  /** cm 操作符, 转换矩阵, 对应 canvas 的 setTransform() */\n  SET_TRANSFORM: [0x63, 0x6d],\n  // ===========\n\n  // 路径构建操作符 =======\n\n  // m 操作符, 移动当前指针到指定位置\n  // l 操作符, 添加一条连接当前指针到指定位置的线段\n  // c 操作符, 添加一条Bezier曲线, 有 2 个控制点, 2 个端点\n  // v 操作符, 添加一条Bezier曲线, 2 个控制点重合\n  // y 操作符, 添加一条Bezier曲线, 第二个控制点和第二个端点重合\n  // h 操作符, 闭合路径\n\n  /** re 操作符, 绘制矩形, 对应 canvas 的 rect() */\n  RECT: [0x72, 0x65],\n  // ===========\n\n  // 路径绘制操作符 =======\n\n  // S 操作符, 描绘路径\n  // s 操作符, 闭合路径并描绘路径\n\n  /** f 操作符, 闭合并填充路径, 对应 canvas 的 { beginPath() fill('nonzero') } */\n  FILL_NONZERO: [0x66],\n\n  // f* 操作符, 填充路径, 使用奇偶规则确定区域\n  // B 操作符, 填充路径, 使用非零回转数规则确定区域, 并描绘路径\n  // B* 操作符, 填充路径, 使用奇偶规则确定区域, 并描绘路径\n  // b 操作符, 闭合路径, 填充路径, 使用非零回转数规则确定区域, 并描绘路径\n  // b* 操作符, 闭合路径, 使用奇偶规则确定区域, 并描绘路径\n\n  /** n 操作符, 关闭路径, 对应 canvas 的 closePath() */\n  CLOSE_PATH: [0x6e],\n  // ===========\n\n  // 路径修剪操作符 =======\n  /** W 操作符, 裁剪路径, 对应 canvas 的 clip('nonzero'); */\n  CLIP_NONZERO: [0x57],\n  /** W* 操作符, 裁剪路径, 对应 canvas 的 clip('evenodd'); */\n  CLIP_EVENODD: [0x57, 0x2a],\n  // ===========\n\n  // 文本对象操作符 ========\n  /** BT, 开始一个文本对象 */\n  START_TEXT: [0x42, 0x54],\n  /** ET 操作符, 结束一个文本对象 */\n  END_TEXT: [0x45, 0x54],\n  // ===========\n\n  // 文本状态操作符 =======\n  // Tc 操作符, 设置字符间隔\n  // Tw 操作符, 设置单词间隔\n  // Tz 操作符, 设置水平缩放\n  // TL 操作符, 设置Leading\n\n  /** Tf 操作符, 设置字体, 对应 canvas 的 font */\n  SET_FONT_FAMILY: [0x54, 0x66],\n\n  // Tr 操作符, 设置Render(渲染)模式\n  // Ts 操作符, 设置Rise\n  // ===========\n\n  // 文本位置操作符 ========\n  // Td 操作符, 移动到下一行的开始, 通过偏移(tx,ty).\n\n  /** TD 操作符, 移动指针至下一行, 通过参数 (x, y) 同时设置行间距为 y, 对应 canvas 的 translate() */\n  TRANSLATE_FONT: [0x54, 0x44],\n\n  /** Tm 操作符, 设置字体矩阵, 对应 canvas 的 transform() */\n  SET_FONT_POSITION: [0x54, 0x6d],\n\n  // T* 操作符, 移动到下一行的开始位置, 和 0 Tl Td 相同.\n  // ===========\n\n  // 文本显示操作符 =======\n  /** Tj 操作符, 绘制文本, 对应 canvas 的 fillText() */\n  DRAW_TEXT: [0x54, 0x6a],\n\n  // TJ 操作符, 显示一个或者多个文本字符串, 允许独立的制定各个字型的位置\n  // ' 操作符, 移动到下一行并显示一个文本字符串\n  // \" 操作符, 移动到下一行并显示一个文本字符串, 并指定字符间距为 ac, 单词间距为 aw\n  // ===========\n\n  // type3 字体操作符 =======\n  // d0 操作符, 设置字型的宽度\n  // d1 操作符, 设置字型的宽度及自行的 bounding box(边界矩形)\n  // ===========\n\n  // 颜色操作符 ========\n  // CS 操作符, 设置描绘颜色空间\n  // cs 操作符, 设置非描绘颜色空间\n  // SC 操作符, 设置描绘颜色值, 针对一般颜色空间\n  // SCN 操作符, 设置描绘颜色值, 允许特殊颜色空间\n  // sc 操作符, 设置非描绘颜色值, 针对一般颜色空间\n  // scn 操作符, 设置非描绘颜色值, 允许特殊颜色空间\n  // G 操作符, 设置描绘颜色空间为 DeviceGray, 并设置颜色值\n  // g 操作符, 设置非描绘颜色空间为 DeviceGray, 并设置颜色值\n\n  /** RG 操作符, 设置颜色空间为 DeviceRGB, 并设置颜色, 对应 canvas 的 fillStyle */\n  FILL_COLOR: [0x52, 0x47],\n  /** rg 操作符, 设置非颜色空间为 DeviceRGB, 并设置颜色, 对应 canvas 的 strokeStyle */\n  STROKE_COLOR: [0x72, 0x67],\n\n  // K 操作符, 设置描绘颜色空间为 DeviceCMYK, 并设置颜色值\n  // k 操作符, 设置非描绘颜色空间为 DeviceCMYK, 并设置颜色值\n  // ===========\n\n  // 渐变样式操作符 =========\n  // sh, 输出一个 shading 对象\n  // ===========\n\n  // 内联图像操作符 =========\n  // BI 操作符, 开始一个内联图像\n  // ID 操作符, 开始内联图像数据\n  // EI 操作符, 结束一个内敛图像\n  // ===========\n\n  // 外部对象操作符 ========\n  /** Do 操作符, 输出一个外部对象, 一般为图像资源 */\n  OUTPUT: [0x44, 0x6f]\n  // ===========\n\n  // 标记内容操作符 ========\n  // MP, 定义一个标记内容点\n  // DP, 定义一个带属性列表的标记内容点\n  // BMC, 开始一个标记内容序列\n  // BDC, 开始一个带属性列表的标记内容序列\n  // EMC, 结束一个标记内容序列\n  // ===========\n\n  // 兼容性操作符 ========\n  // BX: 开始一个兼容段\n  // EX: 结束一个兼容段\n  // ===========\n};\n","import { Flag, Feature, InvisibleChar, Graphic } from './enum';\n\n/** point to px */\nexport const getCurrentPixel = (pt: number, scale = 1) =>\n  ((pt * (window.devicePixelRatio * 96)) / 72) * scale;\n\n/** 相等判断 */\nexport const isEqual = (variable1: unknown, variable2: unknown) =>\n  Object.is(variable1, variable2);\n\n/** 组合判断 */\nexport const combination =\n  (...fns: ReturnType<typeof isTypeOf>[]) =>\n  (maybe: Uint8Array, offset?: number) =>\n    fns.some((fn) => fn(maybe, offset));\n\n/** 柯里化函数，匹配字节数据 */\nexport const isTypeOf =\n  (binary: number[]) => (maybe: Uint8Array, offset?: number) =>\n    binary.every((correct, i) => correct === maybe[i + (offset || 0)]);\n\nexport const toText = (binary: Uint8Array) => new TextDecoder().decode(binary);\n\n// 获取文件缓冲区视图\nexport const getBufferView = (file: File) => {\n  return new Promise<Uint8Array>((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve(new Uint8Array(reader.result as ArrayBuffer));\n    };\n\n    reader.onerror = reject;\n\n    reader.readAsArrayBuffer(file);\n  });\n};\n\n/** 是否是 pdf 文件, 标识数据: %PDF */\nexport const isPdf = isTypeOf(Flag.IS_PDF);\n\n/** 是否是字典头, 特征数据: << */\nexport const isDictionaryStart = isTypeOf(Feature.DICTIONARY_START);\n\n/** 是否是字典结尾, 特征数据: >> */\nexport const isDictionaryEnd = isTypeOf(Feature.DICTIONARY_END);\n\n/** 是否是数组开始, 特征数据: [ */\nexport const isSquareBracketStart = isTypeOf(Feature.SQUARE_BRACKET_START);\n\n/** 是否是数组结束, 特征数据: ] */\nexport const isSquareBracketEnd = isTypeOf(Feature.SQUARE_BRACKET_END);\n\n/** 是否是名称, 特征数据: / */\nexport const isInclined = isTypeOf(Feature.INCLINED);\n\n/** 是否是字符串开头, 特征数据: < */\nexport const isArrowStart = isTypeOf(Feature.ARROW_START);\n\n/** 是否是字符串结尾, 特征数据: > */\nexport const isArrowEnd = isTypeOf(Feature.ARROW_END);\n\n/** 是否是字符串开头, 特征数据: ( */\nexport const isParenthesesStart = isTypeOf(Feature.PARENTHESES_START);\n\n/** 是否是字符串结尾, 特征数据: ) */\nexport const isParenthesesEnd = isTypeOf(Feature.PARENTHESES_END);\n\n/** 是否是特征数据开头 */\nexport const isStart = combination(\n  isDictionaryStart,\n  isSquareBracketStart,\n  isArrowStart,\n  isParenthesesStart\n);\n\n/** 是否是特征数据结尾 */\nexport const isEnd = combination(\n  isDictionaryEnd,\n  isSquareBracketEnd,\n  isArrowEnd,\n  isParenthesesEnd\n);\n\n/** 是否是空格 */\nexport const isSpace = isTypeOf(InvisibleChar.SPACE);\n\n/** 是否是换行 */\nexport const isLineFeed = isTypeOf(InvisibleChar.LINE_FEED);\n\n/** 是否是回车 */\nexport const isCarriageReturn = isTypeOf(InvisibleChar.CARRIAGE_RETURN);\n\n/** 是否是换行 */\nexport const isLineBreak = isTypeOf(InvisibleChar.LINE_BREAK);\n\n/** 是否是数据断点, 假定空格、换行为数据断点处 */\nexport const isBreakPoint = combination(\n  isSpace,\n  isLineFeed,\n  isCarriageReturn,\n  isLineBreak\n);\n\n/** 是否是间接引用 */\nexport const isQuote = isTypeOf(Flag.QUOTE);\n\n/** 是否是流开始 */\nexport const isStreamStart = isTypeOf(Flag.STREAM_START);\n\n/** 是否是流结束 */\nexport const isStreamEnd = isTypeOf(Flag.STREAM_END);\n\n/** 是否是线宽 */\nexport const isLineWidth = isTypeOf(Graphic.LINE_WIDTH);\n\n/** 是否是线端点 */\nexport const isLineCap = isTypeOf(Graphic.LINE_CAP);\n\n/** 是否是线交叉 */\nexport const isLineJoin = isTypeOf(Graphic.LINE_JOIN);\n\n/** 是否是斜接面限制比例 */\nexport const isMiterLimit = isTypeOf(Graphic.MITER_LIMIT);\n\n/** 是否是图形状态 */\nexport const isGS = isTypeOf(Graphic.GS);\n\n/** 是否是保存状态 */\nexport const isSave = isTypeOf(Graphic.SAVE);\n\n/** 是否是回退状态 */\nexport const isRestore = isTypeOf(Graphic.RESTORE);\n\n/** 是否是回退状态 */\nexport const isSetTransform = isTypeOf(Graphic.SET_TRANSFORM);\n\n/** 是否是绘制矩形 */\nexport const isRect = isTypeOf(Graphic.RECT);\n\n/** 是否是填充路径 */\nexport const isFillNonZero = isTypeOf(Graphic.FILL_NONZERO);\n\n/** 是否是闭合路径 */\nexport const isClosePath = isTypeOf(Graphic.CLOSE_PATH);\n\n/** 是否是裁剪路径 */\nexport const isClipNonZero = isTypeOf(Graphic.CLIP_NONZERO);\n\n/** 是否是裁剪路径 */\nexport const isClipEvenodd = isTypeOf(Graphic.CLIP_EVENODD);\n\n/** 是否是开始文本对象 */\nexport const isStartText = isTypeOf(Graphic.START_TEXT);\n\n/** 是否是结束文本对象 */\nexport const isEndText = isTypeOf(Graphic.END_TEXT);\n\n/** 是否设置字体 */\nexport const isSetFontFamily = isTypeOf(Graphic.SET_FONT_FAMILY);\n\n/** 是否设置文字偏移 */\nexport const isTranslateFont = isTypeOf(Graphic.TRANSLATE_FONT);\n\n/** 是否设置文字矩阵 */\nexport const isSetFontPosition = isTypeOf(Graphic.SET_FONT_POSITION);\n\n/** 是否显示文字 */\nexport const isDrawText = isTypeOf(Graphic.DRAW_TEXT);\n\n/** 是否是 fill 样式 */\nexport const isFillColor = isTypeOf(Graphic.FILL_COLOR);\n\n/** 是否 stroke 样式 */\nexport const isStrokeColor = isTypeOf(Graphic.STROKE_COLOR);\n\n/** 是否 output */\nexport const isOutput = isTypeOf(Graphic.OUTPUT);\n\nexport const isOperator = combination(\n  isLineWidth,\n  isLineCap,\n  isLineJoin,\n  isMiterLimit,\n  isGS,\n  isSave,\n  isRestore,\n  isSetTransform,\n  isRect,\n  isFillNonZero,\n  isClosePath,\n  isClipNonZero,\n  isClipEvenodd,\n  isStartText,\n  isEndText,\n  isSetFontFamily,\n  isTranslateFont,\n  isSetFontPosition,\n  isDrawText,\n  isFillColor,\n  isStrokeColor,\n  isOutput\n);\n\n/** 开始字体映射区域 */\nexport const isBeginChar = isTypeOf(Flag.BEGIN_CHAR);\n\n/** 结束字体映射区域 */\nexport const isEndChar = isTypeOf(Flag.BEGIN_CHAR);\n","/* eslint-disable no-case-declarations */\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport pako from 'pako';\nimport { isNumber, isArray, isUndef, createCanvasContext } from '@/utils';\nimport {\n  Flag,\n  Feature,\n  InvisibleChar,\n  Graphic,\n  LINE_CAPS,\n  LINE_JOINS\n} from './enum';\nimport {\n  /* 工具函数 */\n  isEqual,\n  getBufferView,\n  toText,\n  isTypeOf,\n  /* 标识函数 */\n  isPdf,\n  isQuote,\n  isStreamStart,\n  isStreamEnd,\n  isBeginChar,\n  isEndChar,\n  /* 特征函数 */\n  isDictionaryStart,\n  isDictionaryEnd,\n  isSquareBracketStart,\n  isSquareBracketEnd,\n  isInclined,\n  isArrowStart,\n  isArrowEnd,\n  isParenthesesStart,\n  isParenthesesEnd,\n  isStart,\n  isEnd,\n  /* 断点函数 */\n  isBreakPoint,\n  isLineBreak,\n  /* 绘图函数 */\n  isLineWidth,\n  isLineCap,\n  isLineJoin,\n  isMiterLimit,\n  isGS,\n  isSave,\n  isRestore,\n  isSetTransform,\n  isRect,\n  isFillNonZero,\n  isClosePath,\n  isClipNonZero,\n  isClipEvenodd,\n  isStartText,\n  isEndText,\n  isSetFontFamily,\n  isTranslateFont,\n  isSetFontPosition,\n  isDrawText,\n  isFillColor,\n  isStrokeColor,\n  isOutput\n} from './utils';\n\nexport class PDFParser {\n  /** 字节数组 */\n  bytes: Uint8Array;\n  /** 字节偏移 */\n  offset = 0;\n  /** 原字节偏移 */\n  beforeOffset = 0;\n  /** 数组解析深度 */\n  depth = 0;\n  /** 状态栈 */\n  stateStack: PDF.StateStack = [];\n\n  constructor(bytes: Uint8Array) {\n    this.bytes = bytes;\n  }\n\n  /** 字节偏移控制 */\n  forward(step?: number) {\n    return isNumber(step) ? (this.offset += step) : ++this.offset;\n  }\n\n  back(step?: number) {\n    return isNumber(step) ? (this.offset -= step) : --this.offset;\n  }\n\n  /** 字节偏移设置 */\n  set(before: number) {\n    return (this.offset = before);\n  }\n\n  /** 缓存当前字节偏移 */\n  cache() {\n    this.beforeOffset = this.offset;\n  }\n\n  /** 重置字节偏移 */\n  reset() {\n    this.offset = this.beforeOffset;\n  }\n\n  /** 解压数据 */\n  ungzip(zip: Uint8Array) {\n    return pako.ungzip(zip);\n  }\n\n  /** 查找标记偏移 */\n  findFlag(\n    stream: Uint8Array,\n    intent: number[],\n    direction: 'left' | 'right' = 'left'\n  ) {\n    let offset = direction === 'left' ? 0 : stream.length - 1;\n\n    const isIntent = isTypeOf(intent);\n\n    const action = () => (direction === 'left' ? offset++ : offset--);\n\n    const stop = () =>\n      direction === 'left' ? offset < stream.length : offset >= 0;\n\n    while (stop()) {\n      if (stream[offset] === intent[0] && isIntent(stream, offset)) {\n        return (offset += intent.length);\n      }\n\n      action();\n    }\n\n    return false;\n  }\n\n  /** 解析值 */\n  parseValue(stream: Uint8Array, decision?: ReturnType<typeof isTypeOf>) {\n    /** 数据开始 */\n    let startOffset = this.offset;\n\n    const isBreak = (bytes: Uint8Array, offset?: number) =>\n      decision\n        ? !decision(bytes, offset)\n        : !isBreakPoint(bytes, offset) &&\n          !isEnd(bytes, offset) &&\n          !isStart(bytes, offset);\n\n    for (; ; this.forward()) {\n      /** 不为断点则视为数据开始 */\n      if (isBreakPoint(stream, this.offset)) continue;\n\n      startOffset = this.offset;\n\n      for (; ; this.forward()) {\n        /** 为断点处或为特征数据结尾则视为数据结束 */\n        if (isBreak(stream, this.offset)) continue;\n\n        return stream.slice(startOffset, this.offset);\n      }\n    }\n  }\n\n  parseNumber(stream: Uint8Array) {\n    /** 缓存偏移, 不为数字时重置偏移 */\n    this.cache();\n\n    const num = window.parseFloat(toText(this.parseValue(stream)));\n\n    if (!isNumber(num)) {\n      this.reset();\n\n      return false;\n    }\n\n    return num;\n  }\n\n  /** 解析引用 */\n  parseQuote(stream: Uint8Array) {\n    const serial = this.parseNumber(stream);\n\n    if (!isNumber(serial)) return false;\n\n    /** 缓存偏移, 不为间接引用时重置偏移 */\n    this.cache();\n\n    const version = window.parseFloat(toText(this.parseValue(stream)));\n    const isQuoteFlag = isQuote(this.parseValue(stream));\n\n    if (!isNumber(version) || !isQuoteFlag) {\n      this.reset();\n\n      return serial;\n    }\n\n    return { type: 'quote', serial, version } as const;\n  }\n\n  /** 解析数组 */\n  parseMultivalued(stream: Uint8Array) {\n    const values: unknown[] = [];\n\n    let value: unknown = undefined;\n\n    /** 解析引用或数字 */\n    const addQuote = () => {\n      value = this.parseQuote(stream);\n\n      value !== false && values.push(value);\n    };\n\n    /** 默认执行一次 */\n    addQuote();\n\n    while (!isSquareBracketEnd(stream, this.offset)) {\n      switch (true) {\n        /** 解析字典 */\n        case isDictionaryStart(stream, this.offset):\n          values.push(this.parseDictionary(stream));\n\n          break;\n\n        /** 解析数组 */\n        case isSquareBracketStart(stream, this.offset):\n          this.forward(Feature.SQUARE_BRACKET_START.length);\n\n          this.depth++;\n\n          values.push(this.parseMultivalued(stream));\n\n          break;\n\n        /** 解析数组 */\n        case isInclined(stream, this.offset):\n          this.forward(Feature.INCLINED.length);\n\n          values.push({ type: 'name', value: toText(this.parseValue(stream)) });\n\n          break;\n\n        /** 解析字符串 */\n        case isArrowStart(stream, this.offset):\n          this.forward();\n\n          // @ts-ignore\n          values.push(toText(this.parseValue(stream, isArrowEnd)));\n\n          break;\n\n        /** 解析字符串 */\n        case isParenthesesStart(stream, this.offset):\n          this.forward();\n\n          // @ts-ignore\n          values.push(toText(this.parseValue(stream, isParenthesesEnd)));\n\n          break;\n\n        default:\n          this.forward();\n\n          addQuote();\n\n          break;\n      }\n    }\n\n    /** 递归解析数据, 如果解析深度不为 0, 则上层数组还需继续解析数组元素 */\n    if (this.depth !== 0) {\n      this.forward(Feature.SQUARE_BRACKET_END.length);\n      this.depth--;\n    }\n\n    return values;\n  }\n\n  /** 解析字典 */\n  parseDictionary<T>(stream: Uint8Array): T {\n    /** 字典数据 */\n    const dictionary = {} as T;\n\n    /** 是否结束当前解析 */\n    let jumpOut = false;\n\n    /** 当前键 */\n    let key = '';\n\n    /** 顶部栈数据 */\n    const top = () => this.stateStack[this.stateStack.length - 1];\n\n    /** 状态栈弹出 */\n    const popStack = (key: PDF.StateStackKeys) => {\n      const topKey = this.stateStack.pop();\n\n      /** 顶部栈数据与当前数据不一致时，则解析出错 */\n      if (!isEqual(topKey, key)) {\n        throw Error(\n          'analyze the PDF error, please contact the plug -in developer'\n        );\n      }\n    };\n\n    while (!jumpOut) {\n      switch (true) {\n        /** 字典开头 */\n        case isDictionaryStart(stream, this.offset):\n          this.forward(Feature.DICTIONARY_START.length);\n\n          this.stateStack.push('DICTIONARY_START');\n\n          if (key !== '') {\n            // TODO: 类型定义与字典解析\n            // @ts-ignore\n            dictionary[key] = this.parseDictionary(this.bytes);\n\n            key = '';\n          }\n\n          break;\n\n        /** 可能是字符串与字典结尾 >>>，因此需要判断顶部栈是否是字典结尾 */\n        case isEqual(top(), 'DICTIONARY_START') &&\n          isDictionaryEnd(stream, this.offset):\n          this.forward(Feature.DICTIONARY_END.length);\n\n          popStack('DICTIONARY_START');\n\n          jumpOut = true;\n\n          break;\n\n        /** 数组开始 */\n        case isSquareBracketStart(stream, this.offset):\n          this.forward(Feature.SQUARE_BRACKET_START.length);\n\n          this.stateStack.push('SQUARE_BRACKET_START');\n\n          // TODO: 类型定义与数组解析\n          // @ts-ignore\n          dictionary[key] = this.parseMultivalued(stream);\n\n          key = '';\n\n          break;\n\n        /** 数组结束 */\n        case isSquareBracketEnd(stream, this.offset):\n          this.forward(Feature.SQUARE_BRACKET_END.length);\n\n          popStack('SQUARE_BRACKET_START');\n\n          break;\n\n        /** 名称 */\n        case isInclined(stream, this.offset):\n          this.forward(Feature.INCLINED.length);\n\n          // TODO: 解析名称\n          // @ts-ignore\n          if (key !== '' && key in dictionary && isUndef(dictionary[key])) {\n            // @ts-ignore\n            dictionary[key] = {\n              type: 'name',\n              value: toText(this.parseValue(stream))\n            };\n\n            key = '';\n          } else {\n            key = toText(this.parseValue(stream));\n\n            // @ts-ignore\n            dictionary[key] = this.parseQuote(stream) || undefined;\n          }\n\n          break;\n\n        /** 字符串开始 */\n        case isArrowStart(stream, this.offset):\n          this.forward(Feature.ARROW_START.length);\n\n          this.stateStack.push('ARROW_START');\n\n          // TODO: 类型定义与字符串解析\n\n          // @ts-ignore\n          dictionary[key] = toText(this.parseValue(stream, isArrowEnd));\n\n          key = '';\n\n          break;\n\n        /** 字符串结束 */\n        case isArrowEnd(stream, this.offset):\n          this.forward(Feature.ARROW_END.length);\n\n          popStack('ARROW_START');\n\n          break;\n\n        /** 字符串开始 */\n        case isParenthesesStart(stream, this.offset):\n          this.forward(Feature.PARENTHESES_START.length);\n\n          this.stateStack.push('PARENTHESES_START');\n\n          // TODO: 类型定义与字符串解析\n\n          // @ts-ignore\n          dictionary[key] = toText(this.parseValue(stream, isParenthesesEnd));\n\n          key = '';\n\n          break;\n\n        /** 字符串结束 */\n        case isParenthesesEnd(stream, this.offset):\n          this.forward(Feature.PARENTHESES_END.length);\n\n          popStack('PARENTHESES_START');\n\n          break;\n\n        default:\n          this.forward();\n\n          break;\n      }\n    }\n\n    return dictionary;\n  }\n\n  parseStream(stream: Uint8Array, offset: number) {\n    this.set(offset);\n\n    let start!: number, end!: number;\n\n    while (!isStreamEnd(stream, this.offset)) {\n      if (\n        stream[this.offset] === Flag.STREAM_START[0] &&\n        isStreamStart(stream, this.offset)\n      ) {\n        this.forward(Flag.STREAM_START.length);\n\n        start = isLineBreak(stream, this.offset)\n          ? this.forward(InvisibleChar.LINE_BREAK.length)\n          : this.forward(InvisibleChar.LINE_FEED.length);\n      } else {\n        this.forward();\n      }\n    }\n\n    while (this.back()) {\n      if (isBreakPoint(stream, this.offset)) {\n        end = isLineBreak(stream, this.offset - 1) ? this.back() : this.offset;\n\n        break;\n      }\n    }\n\n    return stream.slice(start, end);\n  }\n}\n\nexport class PDF extends PDFParser {\n  bytes: Uint8Array;\n\n  startxref: number;\n  xref: number[];\n  trailer: PDF.Trailter | undefined;\n  catalog: PDF.Catalog | undefined;\n  info: PDF.Info | undefined;\n  rootpage: PDF.RootPage | undefined;\n\n  constructor(bytes: Uint8Array) {\n    super(bytes);\n\n    this.bytes = bytes;\n    this.xref = [];\n    this.startxref = 0;\n\n    /** 获取交叉引用表偏移与 trailer */\n    this.getPdfInfo(bytes);\n    /** 获取交叉引用表 */\n    this.getPdfXref(bytes);\n    /** 获取 PDF 详细信息，如作者、创建日期等信息 */\n    this.getPdfDetail(bytes);\n    /** 获取文档目录 */\n    this.getCatalog(bytes);\n    /** 获取根页面数据 */\n    this.getRootPage(bytes);\n  }\n\n  getPdfInfo(stream: Uint8Array) {\n    /** 解析 startxref(记录交叉引用表偏移) */\n    let offset = this.findFlag(stream, Flag.START_XREF, 'right');\n\n    if (isNumber(offset)) {\n      this.set(offset);\n\n      this.startxref = window.parseFloat(toText(this.parseValue(stream)));\n    }\n\n    /** 解析 trailer */\n    offset = this.findFlag(stream, Flag.TRAILER, 'right');\n\n    if (isNumber(offset)) {\n      this.set(offset);\n\n      this.trailer = this.parseDictionary<PDF.Trailter>(stream);\n    }\n  }\n\n  getPdfXref(stream: Uint8Array) {\n    /** 设置偏移为 startxref + xref 的长度 */\n    this.set(this.startxref + Flag.XREF.length);\n\n    /** 解析对象开始编号 */\n    this.parseValue(stream);\n\n    /** 解析对象个数 */\n    let size = window.parseFloat(toText(this.parseValue(stream)));\n\n    while (size--) {\n      /** 解析对象偏移 */\n      this.xref.push(window.parseFloat(toText(this.parseValue(stream))));\n\n      /** 未知 */\n      this.parseValue(stream);\n\n      /** 标识 */\n      this.parseValue(stream);\n    }\n  }\n\n  /** 获取 pdf 详细信息 */\n  getPdfDetail(stream: Uint8Array) {\n    if (!this.trailer) return false;\n\n    if (!this.trailer['Info']) return;\n\n    this.set(this.xref[this.trailer['Info'].serial]);\n\n    try {\n      this.info = this.parseDictionary<PDF.Info>(stream);\n    } catch (err) {\n      /** empty */\n      this.stateStack.length = 0;\n    }\n  }\n\n  /** 获取文档目录 */\n  getCatalog(stream: Uint8Array) {\n    if (!this.trailer) return false;\n\n    this.set(this.xref[this.trailer.Root.serial]);\n\n    this.catalog = this.parseDictionary<PDF.Catalog>(stream);\n  }\n\n  /** 获取根页面 */\n  getRootPage(stream: Uint8Array) {\n    if (!this.catalog) return false;\n\n    this.set(this.xref[this.catalog.Pages.serial]);\n\n    this.rootpage = this.parseDictionary<PDF.RootPage>(stream);\n  }\n\n  /** 绘制 pdf */\n  public createDrawPdf() {\n    return new Draw(this);\n  }\n}\n\nexport class Draw {\n  pdf: PDF;\n  fontMap = new Map();\n\n  constructor(pdf: PDF) {\n    this.pdf = pdf;\n  }\n\n  drawImage(\n    x: PDF.XObject,\n    context: CanvasRenderingContext2D,\n    canvas: HTMLCanvasElement\n  ) {\n    if (x.Type.value !== 'XObject' || x.Subtype.value !== 'Image') return false;\n\n    const pdf = this.pdf;\n    const xref = pdf.xref;\n    const stream = pdf.bytes;\n\n    const { SMask, Width, Height, Filter } = x;\n\n    const { e, f } = context.getTransform();\n\n    const zip = pdf.parseStream(stream, pdf.offset);\n\n    const ungzip =\n      (isArray(Filter) ? Filter[0] : Filter).value === 'FlateDecode'\n        ? pdf.ungzip(zip)\n        : zip;\n\n    const image = document.createElement('img');\n\n    image.width = Width;\n    image.height = Height;\n\n    image.src = URL.createObjectURL(new File([ungzip], 'default'));\n\n    image.onload = () => {\n      context.drawImage(image, e, f);\n    };\n\n    if (SMask) {\n      pdf.set(xref[SMask.serial]);\n      this.drawImage(pdf.parseDictionary<PDF.XObject>(stream), context, canvas);\n    }\n  }\n\n  getFont(f: PDF.Font) {\n    if (f.Type.value !== 'Font' || f.Encoding.value !== 'Identity-H')\n      return false;\n\n    const pdf = this.pdf;\n    const xref = pdf.xref;\n    const stream = pdf.bytes;\n\n    const { ToUnicode /* DescendantFonts 字体信息 */ } = f;\n\n    // pdf.set(xref[DescendantFonts[0].serial]);\n\n    pdf.set(xref[ToUnicode.serial]);\n\n    const { Filter } = pdf.parseDictionary<PDF.ToUnicode>(stream);\n\n    const filter = isArray(Filter) ? Filter[0] : Filter;\n\n    if (filter.value !== 'FlateDecode') return false;\n\n    const ungzip = pdf.ungzip(pdf.parseStream(stream, pdf.offset));\n\n    const _ = new PDFParser(ungzip);\n\n    const map: { [key: string]: string } = {};\n\n    let key = '';\n\n    for (; _.offset < ungzip.length; _.forward()) {\n      if (!isBeginChar(ungzip, _.offset)) continue;\n\n      _.forward(Flag.BEGIN_CHAR.length);\n\n      while (_.offset < ungzip.length) {\n        switch (true) {\n          case isArrowStart(ungzip, _.offset):\n            _.forward(Feature.ARROW_START.length);\n\n            const result = _.parseValue(ungzip, isArrowEnd);\n\n            if (isEqual(key, '')) {\n              key = result.join('');\n\n              map[key] = '';\n            } else if (key in map) {\n              map[key] = toText(result);\n\n              key = '';\n            }\n\n            break;\n\n          default:\n            _.forward();\n\n            break;\n        }\n      }\n\n      if (isEndChar(ungzip, _.offset)) {\n        _.forward(Flag.END_CHAR.length);\n\n        break;\n      }\n    }\n\n    return map;\n  }\n\n  drawContent(\n    stream: Uint8Array,\n    context: CanvasRenderingContext2D,\n    canvas: HTMLCanvasElement,\n    page: PDF.Page,\n    resources: PDF.Resources\n  ) {\n    /** 解析器实例 */\n    const _ = new PDFParser(stream);\n\n    /** pdf 实例 */\n    const pdf = this.pdf;\n\n    /** 交叉引用表 */\n    const xref = pdf.xref;\n\n    /** 操作栈 */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const operations: any[] = [];\n\n    /** 解析完成 */\n    let jumpOut = false;\n\n    let currentFont: { [key: string]: string } = {};\n\n    /** 是否是名称 */\n    function isNames(data: unknown): data is PDF.Names<string> {\n      return (data as PDF.Names<string>).type === 'name';\n    }\n\n    /** 获取引用 */\n    const getQuote = (val: PDF.Names<string>, type: 'gs' | 'do' | 'tf') => {\n      const { ExtGState = {}, Font = {}, XObject = {} } = resources;\n\n      switch (type) {\n        case 'gs':\n          return ExtGState[val.value];\n        case 'do':\n          return XObject[val.value];\n        case 'tf':\n          return Font[val.value];\n        default:\n          break;\n      }\n    };\n\n    while (!jumpOut) {\n      switch (true) {\n        /** 设置线宽 */\n        case isLineWidth(stream, _.offset):\n          _.forward(Graphic.LINE_WIDTH.length);\n\n          const pt = operations.pop();\n\n          if (!isNumber(pt)) throw Error('args is not a number');\n\n          context.lineWidth = pt;\n\n          break;\n\n        /** 设置线端点样式 */\n        case isLineCap(stream, _.offset):\n          _.forward(Graphic.LINE_CAP.length);\n\n          const lineCap = operations.pop();\n\n          if (!isNumber(lineCap)) throw Error('args is not a number');\n\n          context.lineCap = LINE_CAPS[lineCap];\n\n          break;\n\n        /** 设置线交叉样式 */\n        case isLineJoin(stream, _.offset):\n          _.forward(Graphic.LINE_JOIN.length);\n\n          const lineJoin = operations.pop();\n\n          if (!isNumber(lineJoin)) throw Error('args is not a number');\n\n          context.lineJoin = LINE_JOINS[lineJoin];\n\n          break;\n\n        /** 设置斜接面限制 */\n        case isMiterLimit(stream, _.offset):\n          _.forward(Graphic.MITER_LIMIT.length);\n\n          const miterLimit = operations.pop();\n\n          if (!isNumber(miterLimit)) throw Error('args is not a number');\n\n          context.miterLimit = miterLimit;\n\n          break;\n\n        /** 设置图形状态参数 */\n        case isGS(stream, _.offset):\n          _.forward(Graphic.GS.length);\n\n          const gsName = operations.pop();\n\n          if (!isNames(gsName)) throw Error('args not a name');\n\n          const gs = getQuote(gsName, 'gs');\n\n          if (!gs) throw Error('quote does not exist');\n\n          pdf.set(xref[gs.serial]);\n\n          break;\n\n        /** 保存状态 */\n        case isSave(stream, _.offset):\n          _.forward(Graphic.SAVE.length);\n\n          context.save();\n\n          break;\n\n        /** 回退状态 */\n        case isRestore(stream, _.offset):\n          _.forward(Graphic.RESTORE.length);\n\n          context.restore();\n\n          break;\n\n        /** 设置矩阵 */\n        case isSetTransform(stream, _.offset):\n          _.forward(Graphic.SET_TRANSFORM.length);\n\n          if (operations.length < 6) throw Error('args count is lt 6');\n\n          // @ts-ignore\n          context.transform(...operations.map((val) => Number(val)));\n\n          operations.length = 0;\n\n          break;\n\n        /** 添加矩形 */\n        case isRect(stream, _.offset):\n          _.forward(Graphic.RECT.length);\n\n          // @ts-ignore\n          context.rect(...operations.map((item) => Number(item)));\n\n          operations.length = 0;\n\n          break;\n\n        /** 填充路径 */\n        case isFillNonZero(stream, _.offset):\n          _.forward(Graphic.FILL_NONZERO.length);\n\n          context.beginPath();\n\n          context.fill('nonzero');\n\n          break;\n\n        /** 关闭路径 */\n        case isClosePath(stream, _.offset):\n          _.forward(Graphic.CLOSE_PATH.length);\n\n          context.closePath();\n\n          break;\n\n        /** 裁剪路径 */\n        case isClipNonZero(stream, _.offset):\n          _.forward(Graphic.CLIP_NONZERO.length);\n\n          context.clip('nonzero');\n\n          break;\n\n        /** 裁剪路径 */\n        case isClipEvenodd(stream, _.offset):\n          _.forward(Graphic.CLIP_EVENODD.length);\n\n          context.clip('evenodd');\n\n          break;\n\n        /** 开始一个文本对象 */\n        case isStartText(stream, _.offset):\n          _.forward(Graphic.START_TEXT.length);\n\n          context.save();\n\n          break;\n\n        /** 结束一个文本对象 */\n        case isEndText(stream, _.offset):\n          _.forward(Graphic.END_TEXT.length);\n\n          context.restore();\n\n          break;\n\n        /** 设置字体 */\n        case isSetFontFamily(stream, _.offset):\n          _.forward(Graphic.SET_FONT_FAMILY.length);\n\n          const fontSize = operations.pop();\n\n          const fontName = operations.pop();\n\n          if (!isNames(fontName)) throw Error('args not a name');\n\n          const font = getQuote(fontName, 'tf');\n\n          if (!font) throw Error('quote does not exist');\n\n          if (this.fontMap.has(fontName.value)) {\n            currentFont = this.fontMap.get(fontName.value);\n          } else {\n            pdf.set(xref[font.serial]);\n\n            const mapValue = this.getFont(\n              pdf.parseDictionary<PDF.Font>(pdf.bytes)\n            );\n\n            if (!mapValue) throw Error('parse font error');\n\n            this.fontMap.set(fontName.value, mapValue);\n\n            currentFont = mapValue;\n          }\n\n          context.font = (fontSize * 3) / 72 + 'px';\n\n          break;\n\n        /** 移动字体指针 */\n        case isTranslateFont(stream, _.offset):\n          _.forward(Graphic.TRANSLATE_FONT.length);\n\n          // @ts-ignore\n          context.translate(...operations.map((item) => Number(item)));\n\n          operations.length = 0;\n\n          break;\n\n        /** 设置字体矩阵 */\n        case isSetFontPosition(stream, _.offset):\n          _.forward(Graphic.SET_FONT_POSITION.length);\n\n          // @ts-ignore\n          context.setTransform(...operations.map((item) => Number(item)));\n\n          operations.length = 0;\n\n          break;\n\n        /** 展示文本 */\n        case isDrawText(stream, _.offset):\n          _.forward(Graphic.DRAW_TEXT.length);\n\n          const fontKey = operations.pop();\n\n          if (!currentFont[fontKey]) throw Error('parse error, font dot exist');\n\n          const char = String.fromCodePoint(\n            window.parseInt(currentFont[fontKey], 16)\n          );\n\n          const { b, c, e, f } = context.getTransform();\n\n          context.save();\n\n          context.setTransform(1, b, c, 1, e, f);\n\n          context.fillText(\n            char,\n            context.getTransform().e,\n            context.getTransform().f\n          );\n\n          context.restore();\n\n          break;\n\n        /** fill 颜色 */\n        case isFillColor(stream, _.offset):\n          _.forward(Graphic.FILL_COLOR.length);\n\n          context.fillStyle = `rgb(${operations.join(',')})`;\n\n          operations.length = 0;\n\n          break;\n\n        /** stroke 颜色 */\n        case isStrokeColor(stream, _.offset):\n          _.forward(Graphic.STROKE_COLOR.length);\n\n          context.strokeStyle = `rgb(${operations.join(',')})`;\n\n          operations.length = 0;\n\n          break;\n\n        /** 输出一个外部对象 */\n        case isOutput(stream, _.offset):\n          _.forward(Graphic.OUTPUT.length);\n\n          const xName = operations.pop();\n\n          if (!isNames(xName)) throw Error('args not a name');\n\n          const XObject = getQuote(xName, 'do');\n\n          if (!XObject) throw Error('quote does not exist');\n\n          pdf.set(xref[XObject.serial]);\n\n          this.drawImage(\n            pdf.parseDictionary<PDF.XObject>(pdf.bytes),\n            context,\n            canvas\n          );\n\n          break;\n\n        /*名称*/\n        case isInclined(stream, _.offset):\n          _.forward(Feature.INCLINED.length);\n\n          operations.push({\n            type: 'name',\n            value: toText(_.parseValue(stream))\n          });\n\n          break;\n\n        /** 字符串开始 */\n        case isArrowStart(stream, _.offset):\n          _.forward(Feature.ARROW_START.length);\n\n          operations.push(_.parseValue(stream, isArrowEnd).join(''));\n\n          _.forward(Feature.ARROW_END.length);\n\n          break;\n\n        default:\n          _.forward();\n\n          const num = _.parseNumber(stream);\n\n          num !== false && operations.push(num);\n\n          if (_.offset + InvisibleChar.LINE_BREAK.length >= stream.length) {\n            jumpOut = true;\n          }\n\n          break;\n      }\n    }\n  }\n\n  drawPage(\n    page: PDF.Page,\n    context: CanvasRenderingContext2D,\n    canvas: HTMLCanvasElement\n  ) {\n    const { Contents, Resources /* Annots = [] 注释对象 */ } = page;\n\n    const contents = isArray(Contents) ? Contents : [Contents];\n\n    const pdf = this.pdf;\n\n    let i = 0;\n\n    while (i < contents.length) {\n      pdf.set(pdf.xref[contents[i].serial]);\n\n      const { /* DL, 行间距 */ Filter /* Length 流字节长度 */ } =\n        pdf.parseDictionary<PDF.Contents>(pdf.bytes);\n\n      /** 对于压缩算法, 需要考虑太多, 这里只处理第一个压缩且压缩算法为 FlateDecode 的数据 */\n      const [filter] = isArray(Filter) ? Filter : [Filter];\n\n      if (!isEqual(filter.value, 'FlateDecode')) {\n        i++;\n        continue;\n      }\n\n      const ungzip = pdf.ungzip(pdf.parseStream(pdf.bytes, pdf.offset));\n\n      this.drawContent(ungzip, context, canvas, page, Resources);\n\n      i++;\n    }\n  }\n\n  displayPage(pageNumber: number) {\n    const pdf = this.pdf;\n\n    if (!pdf.rootpage) return false;\n\n    const offset = pdf.xref[pdf.rootpage.Kids[pageNumber].serial];\n\n    if (!isNumber(offset)) return false;\n\n    pdf.set(offset);\n\n    const page = pdf.parseDictionary<PDF.Page>(pdf.bytes);\n\n    pdf.set(pdf.xref[page.Parent.serial]);\n\n    const rootPage = pdf.parseDictionary<PDF.RootPage>(pdf.bytes);\n\n    const mediaBox = page.MediaBox || rootPage.MediaBox || [0, 0, 0, 0];\n\n    const { canvas, context } = createCanvasContext({\n      width: mediaBox[2],\n      height: mediaBox[3]\n    });\n\n    try {\n      this.drawPage(page, context, canvas);\n    } catch (err) {\n      console.error(`error of rendering on page ${pageNumber}`);\n\n      console.error(err);\n\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      context.fillText(String(err), 0, 0);\n    }\n\n    return canvas;\n  }\n}\n\n/** pdf 解析 */\nasync function pdfParser(file: File) {\n  const bytes = await getBufferView(file);\n\n  if (!isPdf(bytes)) {\n    return false;\n  }\n\n  const pdf = new PDF(bytes);\n\n  return pdf;\n}\n\nexport default pdfParser;\n","// extracted by mini-css-extract-plugin\nexport default {\"pdf-parser\":\"PdfParser_pdf-parser__3nQ60\",\"desc\":\"PdfParser_desc__26FXE\",\"drawing-board\":\"PdfParser_drawing-board__P8fW-\",\"page\":\"PdfParser_page__JLcFH\"};","import React, { useRef, useState, useEffect } from 'react';\nimport { forEach } from '@/utils';\nimport ExtraInformation from '@/components/ExtraInformation/ExtraInformation';\nimport pdfParser from './lib/PDFParser';\nimport Button from '@/components/Button/Button';\nimport Text from '@/components/Text/Text';\nimport style from './PdfParser.module.css';\n\n// --title: PDF 解析--\n\nexport default function PdfParser() {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const drawBoardRef = useRef<HTMLElement>(null);\n  const [pages, setPages] = useState<HTMLCanvasElement[]>([]);\n\n  useEffect(() => {\n    forEach(pages, (page) => {\n      const div = document.createElement('div');\n\n      div.classList.add(style['page']);\n\n      div.appendChild(page);\n\n      drawBoardRef.current?.appendChild(div);\n    });\n  }, [pages]);\n\n  const clickHandle = () => inputRef.current?.click();\n\n  const changeHandle: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    const { files } = e.target;\n\n    if (!files) return;\n\n    const file = files[0];\n\n    parse(file);\n  };\n\n  const clearDrawBoard = () => {\n    setPages([]);\n\n    if (drawBoardRef.current) {\n      const children = drawBoardRef.current.children;\n\n      for (let i = children.length - 1; i >= 0; i--) {\n        if (children[i].classList.contains(style['page'])) {\n          children[i].remove();\n        }\n      }\n    }\n  };\n\n  const parse = async (pdf: File) => {\n    const parser = await pdfParser(pdf);\n\n    // TODO: 弹出提示，完成 Message 组件\n    if (parser === false) return;\n\n    const draw = parser.createDrawPdf();\n\n    const pages = parser.rootpage?.Kids || [];\n\n    const images: HTMLCanvasElement[] = [];\n\n    forEach(pages, (page, i) => {\n      const image = draw.displayPage(i);\n\n      image !== false && images.push(image);\n    });\n\n    setPages(images);\n  };\n\n  return (\n    <>\n      <div className={style['pdf-parser']}>\n        <ExtraInformation\n          platform={{\n            blog: {\n              title: '解锁 PDF 文件：使用 JavaScript 和 Canvas 渲染 PDF 内容',\n              url: 'https://yuanyxh.com/posts/produce/%E8%A7%A3%E9%94%81%20PDF%20%E6%96%87%E4%BB%B6%EF%BC%9A%E4%BD%BF%E7%94%A8%20JavaScript%20%E5%92%8C%20Canvas%20%E6%B8%B2%E6%9F%93%20PDF%20%E5%86%85%E5%AE%B9.html'\n            },\n            juejin: { url: 'https://juejin.cn/post/7236028062872207420' },\n            zhihu: { url: 'https://zhuanlan.zhihu.com/p/631442533' },\n            csdn: {\n              url: 'https://blog.csdn.net/yuanfgbb/article/details/132398359?spm=1001.2014.3001.5502'\n            }\n          }}\n        />\n\n        <Button type=\"primary\" onClick={clickHandle}>\n          上传解析 PDF\n        </Button>\n\n        <Button style={{ marginLeft: 10 }} onClick={clearDrawBoard}>\n          清除画板\n        </Button>\n\n        <Text\n          className={style['desc']}\n          block\n          truncated\n          type=\"info\"\n          size=\"small\"\n        >\n          解析器用于学习交流，仅实现部分功能且兼容度不高，如遇无法解析属于正常情况\n        </Text>\n\n        <section\n          ref={drawBoardRef}\n          className={style['drawing-board']}\n        ></section>\n      </div>\n\n      <input\n        ref={inputRef}\n        type=\"file\"\n        accept=\".pdf\"\n        style={{ display: 'none' }}\n        onChange={changeHandle}\n      />\n    </>\n  );\n}\n"],"names":["ExtraInformation","props","platform","_jsx","Tip","type","children","header","body","_platform$blog","_platform$blog2","_jsxs","className","style","Platform","Link","to","url","target","Text","title","Object","keys","map","key","_platform","generateClass","classnames","_style","autoClose","_props$type","_props$showClose","showClose","_props$className","nativeProps","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","timer","setTimer","tipRef","useRef","useTransition","active","useEffect","window","setTimeout","handleClose","clearTimeout","tipClass","concat","_objectSpread","ref","composeClass","isRenderElement","onClick","Flag","Feature","InvisibleChar","LINE_CAPS","LINE_JOINS","Graphic","isEqual","variable1","variable2","is","combination","_len","arguments","length","fns","Array","_key","maybe","offset","some","fn","isTypeOf","binary","every","correct","i","toText","TextDecoder","decode","getBufferView","file","Promise","resolve","reject","reader","FileReader","onload","Uint8Array","result","onerror","readAsArrayBuffer","isPdf","isDictionaryStart","isDictionaryEnd","isSquareBracketStart","isSquareBracketEnd","isInclined","isArrowStart","isArrowEnd","isParenthesesStart","isParenthesesEnd","isStart","isEnd","isSpace","isLineFeed","isCarriageReturn","isLineBreak","isBreakPoint","isQuote","isStreamStart","isStreamEnd","isLineWidth","isLineCap","isLineJoin","isMiterLimit","isGS","isSave","isRestore","isSetTransform","isRect","isFillNonZero","isClosePath","isClipNonZero","isClipEvenodd","isStartText","isEndText","isSetFontFamily","isTranslateFont","isSetFontPosition","isDrawText","isFillColor","isStrokeColor","isOutput","isBeginChar","isEndChar","PDFParser","bytes","_classCallCheck","beforeOffset","depth","stateStack","this","_createClass","value","step","isNumber","before","zip","pako","stream","intent","direction","undefined","isIntent","decision","startOffset","forward","slice","cache","num","parseFloat","parseValue","reset","serial","parseNumber","version","isQuoteFlag","_this","values","addQuote","parseQuote","push","parseDictionary","parseMultivalued","_this2","dictionary","jumpOut","popStack","topKey","pop","Error","isUndef","start","end","set","back","PDF","_PDFParser","_inherits","_super","_createSuper","_this3","call","startxref","xref","trailer","catalog","info","rootpage","getPdfInfo","getPdfXref","getPdfDetail","getCatalog","getRootPage","findFlag","size","err","Root","Pages","Draw","pdf","fontMap","Map","x","context","canvas","Type","Subtype","SMask","Width","Height","Filter","_context$getTransform","getTransform","e","f","parseStream","ungzip","isArray","image","document","createElement","width","height","src","URL","createObjectURL","File","drawImage","Encoding","ToUnicode","_","join","page","resources","operations","currentFont","isNames","data","getQuote","val","_resources$ExtGState","ExtGState","_resources$Font","Font","_resources$XObject","XObject","pt","lineWidth","lineCap","lineJoin","miterLimit","gsName","gs","save","restore","transform","apply","_toConsumableArray","Number","rect","item","beginPath","fill","closePath","clip","fontSize","fontName","font","has","get","mapValue","getFont","translate","setTransform","fontKey","char","String","fromCodePoint","parseInt","_context$getTransform2","b","c","fillText","fillStyle","strokeStyle","xName","Contents","Resources","contents","_ref","filter","drawContent","pageNumber","Kids","Parent","rootPage","mediaBox","MediaBox","_createCanvasContext","createCanvasContext","drawPage","console","error","clearRect","_pdfParser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","abrupt","stop","_x","PdfParser","inputRef","drawBoardRef","pages","setPages","forEach","_drawBoardRef$current","div","classList","add","appendChild","current","parse","_parser$rootpage","parser","draw","images","pdfParser","createDrawPdf","displayPage","_Fragment","blog","juejin","zhihu","csdn","Button","_inputRef$current","click","marginLeft","contains","remove","block","truncated","accept","display","onChange","files"],"sourceRoot":""}